{"version":3,"file":"component---src-pages-projects-interconnected-js-2f3f5c6ad1463d42e6c4.js","mappings":"2KAGe,SAAS,EAAT,GAA+B,IAApBA,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,UAC/B,OACE,uBAAKC,UAAU,8CACb,gBAAC,IAAD,CACEC,MAAO,MAAOH,QAAP,IAAgCA,GAAAA,EAAOI,gBAAkBJ,EAAQC,EACxEC,UAAU,0D,mECNH,SAASG,EAAT,GAA6B,IAAZC,EAAW,EAAXA,SAC9B,OAAO,0BAAQJ,UAAU,wCAAwCI,K,4ECCpD,SAASC,EAAT,GAAqF,IAAnEC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,MAAOR,EAAW,EAAXA,SACtF,OACE,0BAAQJ,UAAU,sDAChB,uBAAKA,UAAU,yBACb,2BACE,gBAAC,EAAAa,GAAD,CAAIb,UAAU,0BAA0BM,GACxC,wBAAMN,UAAU,SAAhB,KAA2BO,EAA3B,MAEF,sBAAIP,UAAU,mBAAmBQ,IAEnC,uBAAKR,UAAU,gCACb,0BACGS,GACC,0BACE,uCADF,IAC0BA,EAAMK,KAAK,OAGtCJ,GACC,0BACE,yCADF,IAC4BA,GAG7BC,GACC,0BACE,gBAAC,KAAD,CAAcI,KAAMJ,EAAYK,OAAO,SAAShB,UAAU,aAA1D,wBAKHY,GACCA,EAAMK,KAAI,gBAAEC,EAAF,KAAQC,EAAR,YACR,0BACE,gBAAC,KAAD,CAAcJ,KAAMI,EAAKH,OAAO,SAAShB,UAAU,aAChDkB,EADH,UAKLd,O,0JCnBI,SAASgB,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,QAASjB,EAAW,EAAXA,SACjCkB,GAAYC,EAAAA,EAAAA,gBAAe,cAA3BD,SAUAhB,EAA2Be,EAA3Bf,KAAMkB,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,YAEbC,EAAmBJ,EAASK,MAAMC,WAAU,SAAAC,GAAC,OAAIA,EAAEL,OAASA,KAAQ,EAEpEM,EACJR,EAASK,MAAML,EAASK,MAAMI,OAASL,EAAmBA,EAAmB,GAE/E,OACE,gBAACM,EAAA,EAAD,CAAQC,MAAO3B,EAAMmB,YAAaA,GAChC,uBAAKzB,UAAU,SAASI,GAExB,gBAAC,EAAA8B,KAAD,CACEC,GAAE,aAAeL,EAAYN,KAC7BxB,UAAU,0HAEV,gBAACoC,EAAA,EAAD,CACEnC,MAAO6B,EAAYhC,OAASgC,EAAY/B,UACxCC,UAAU,+HAEZ,uBAAKA,UAAU,iEACb,2BACE,qBAAGA,UAAU,SAAb,gBACA,gBAAC,EAAAa,GAAD,CACEwB,IAAKH,EAAAA,KACLC,GAAE,aAAeL,EAAYN,KAC7BxB,UAAU,yCAET8B,EAAYxB,MAEf,wBAAMN,UAAU,SAAhB,KAA2B8B,EAAYvB,KAAvC,MAEF,sBAAIP,UAAU,oBAAoB8B,EAAYtB,UAEhD,uBAAKR,UAAU,mCAvDvBsC,EAAAA,GAAAA,eAAoBC,EAAAA,I,qJCAL,SAASC,EAAT,GAAgE,IAAD,IAA1BC,KAAOpB,EAAmB,EAAnBA,QAASqB,EAAU,EAAVA,OAC3DpC,EAAiFe,EAAjFf,KAAMG,EAA2EY,EAA3EZ,MAAOD,EAAoEa,EAApEb,QAAST,EAA2DsB,EAA3DtB,UAAWD,EAAgDuB,EAAhDvB,MAAOS,EAAyCc,EAAzCd,KAAMG,EAAmCW,EAAnCX,OAAQC,EAA2BU,EAA3BV,WAAYc,EAAeJ,EAAfI,YAEnEkB,GAAWC,EAAAA,EAAAA,GAAuBF,EAAOf,MAAO,kBAEtD,OACE,gBAAC,IAAD,CAASN,QAASA,GAChB,gBAAC,IAAD,CACEf,KAAMA,EACNE,QAASA,EACTD,KAAMA,EACNG,OAAQA,EACRC,WAAYA,EACZF,MAAOA,IAET,gBAAC,IAAD,CAAOX,MAAOA,EAAOC,UAAWA,IAChC,gBAAC,KAAD,CAASC,UAAU,QAAQyB,YAAaA,IACxC,gBAAC,IAAD,CAAMoB,KAAG,EAACC,SAAO,GACf,gBAAC,IAAD,CAAO7C,MAAO0C,EAAS,WACvB,gBAAC,IAAD,CAAO1C,MAAO0C,EAAS,WACvB,gBAAC,IAAD,CAAO1C,MAAO0C,EAAS,WACvB,gBAAC,IAAD,CAAO1C,MAAO0C,EAAS,YAEzB,gBAAC,IAAD,KACE,gBAAC,KAAD,CAAKV,MAAM,QACT,0BACE,8CAGJ,gBAAC,KAAD,CAAKA,MAAM,wBACT,0BACE,mCACA,sCACA","sources":["webpack://michele-bruno/./src/components/Project/Cover.js","webpack://michele-bruno/./src/components/Project/Footer.js","webpack://michele-bruno/./src/components/Project/Heading.js","webpack://michele-bruno/./src/components/Project/Wrapper.js","webpack://michele-bruno/./src/pages/projects/interconnected.js"],"sourcesContent":["import * as React from 'react';\nimport Image from '../Image';\n\nexport default function ({cover, thumbnail}) {\n  return (\n    <div className=\"h-screen overflow-hidden border-t border-b\">\n      <Image\n        image={typeof cover !== 'undefined' && cover?.childImageSharp ? cover : thumbnail}\n        className=\"h-full w-full object-cover scale-110 object-center\"\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\n\nexport default function Footer({children}) {\n  return <footer className=\" pb-lg px grid lg:grid-cols-4 w-full\">{children}</footer>;\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {AnimatedLink, H1} from '../Typography';\n\nexport default function Heading({name, year, tagline, roles, client, websiteUrl, links, children}) {\n  return (\n    <header className=\"grid grid-cols-1 lg:grid-cols-4 items-end px py-lg\">\n      <div className=\"col-span-3 pb lg:pb-0\">\n        <div>\n          <H1 className=\"lg:inline leading-none\">{name}</H1>\n          <span className=\"fs-xl\"> ({year})</span>\n        </div>\n        <h2 className=\"fs-xl text-gray\">{tagline}</h2>\n      </div>\n      <div className=\"pt-8 text-base flex flex-col\">\n        <ul>\n          {roles && (\n            <li>\n              <strong>Role:</strong> {roles.join(', ')}\n            </li>\n          )}\n          {client && (\n            <li>\n              <strong>Client:</strong> {client}\n            </li>\n          )}\n          {websiteUrl && (\n            <li>\n              <AnimatedLink href={websiteUrl} target=\"_blank\" className=\"font-bold\">\n                Visit the website ↗\n              </AnimatedLink>\n            </li>\n          )}\n          {links &&\n            links.map(([text, url]) => (\n              <li>\n                <AnimatedLink href={url} target=\"_blank\" className=\"font-bold\">\n                  {text} ↗\n                </AnimatedLink>\n              </li>\n            ))}\n          {children}\n        </ul>\n      </div>\n    </header>\n  );\n}\n\nHeading.propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({text: PropTypes.string.isRequired, url: PropTypes.string.isRequired})\n  ),\n};\n","import * as React from 'react';\nimport {ScrollTrigger} from 'gsap/ScrollTrigger';\nimport gsap from 'gsap';\nimport {graphql, Link, useStaticQuery} from 'gatsby';\nimport Layout from '../Layout';\nimport Typography, {AnimatedLink, H1, Tag, TextBox} from '../Typography';\nimport Marquee from '../Marquee';\nimport Arrow from '../Arrow';\nimport Grid from '../Grid';\nimport Image from '../Image';\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction Description({description, children}) {\n  return (\n    <TextBox title=\"Overview\">\n      <h3 className=\"fs-4xl mb-2 pb-8\">{description}</h3>\n      {children}\n    </TextBox>\n  );\n}\n\nexport default function Wrapper({project, children}) {\n  const {projects} = useStaticQuery(graphql`\n    query {\n      projects: allProjectsCsv(filter: {isPagePublic: {eq: true}}) {\n        nodes {\n          ...ProjectFragment\n        }\n      }\n    }\n  `);\n\n  const {name, slug, description} = project;\n\n  const nextProjectIndex = projects.nodes.findIndex(p => p.slug === slug) + 1;\n\n  const nextProject =\n    projects.nodes[projects.nodes.length > nextProjectIndex ? nextProjectIndex : 0];\n\n  return (\n    <Layout title={name} description={description}>\n      <div className=\"fs-lg\">{children}</div>\n\n      <Link\n        to={`/projects/${nextProject.slug}`}\n        className=\"min-h-[80vh] justify-center border-y grid grid-cols-1 lg:grid-cols-3 items-end px py-lg relative group overflow-hidden\"\n      >\n        <Image\n          image={nextProject.cover || nextProject.thumbnail}\n          className=\"bg-white object-cover h-full w-full absolute inset-0 opacity-0 group-hover:opacity-30 transition-all group-hover:scale-105\"\n        />\n        <div className=\"col-span-2 col-start-1 pb lg:pb-0 relative mix-blend-multiply\">\n          <div>\n            <p className=\"fs-lg\">Next project</p>\n            <H1\n              tag={Link}\n              to={`/projects/${nextProject.slug}`}\n              className=\"lg:inline leading-none transition-all\"\n            >\n              {nextProject.name}\n            </H1>\n            <span className=\"fs-xl\"> ({nextProject.year})</span>\n          </div>\n          <h2 className=\"fs-xl text-gray \">{nextProject.tagline}</h2>\n        </div>\n        <div className=\"pt-8 text-base flex flex-col\" />\n      </Link>\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport {graphql} from 'gatsby';\n\nimport Wrapper from '../../components/Project/Wrapper';\nimport Heading from '../../components/Project/Heading';\nimport Cover from '../../components/Project/Cover';\nimport {Tag, TextBox} from '../../components/Typography';\nimport Image, {createGetImageFromName} from '../../components/Image';\nimport Footer from '../../components/Project/Footer';\nimport Grid from '../../components/Grid';\n\nexport default function SignHereToFightThePandemic({data: {project, images}}) {\n  const {name, roles, tagline, thumbnail, cover, year, client, websiteUrl, description} = project;\n\n  const getImage = createGetImageFromName(images.nodes, 'interconnected');\n\n  return (\n    <Wrapper project={project}>\n      <Heading\n        name={name}\n        tagline={tagline}\n        year={year}\n        client={client}\n        websiteUrl={websiteUrl}\n        roles={roles}\n      />\n      <Cover cover={cover} thumbnail={thumbnail} />\n      <TextBox className=\"py-lg\" description={description} />\n      <Grid two padding>\n        <Image image={getImage('1.png')} />\n        <Image image={getImage('2.png')} />\n        <Image image={getImage('3.png')} />\n        <Image image={getImage('4.png')} />\n      </Grid>\n      <Footer>\n        <Tag title=\"Team\">\n          <ul>\n            <li>Federico Pozzi</li>\n          </ul>\n        </Tag>\n        <Tag title=\"Tools and technology\">\n          <ul>\n            <li>Figma</li>\n            <li>GatsbyJs</li>\n            <li>GSAP</li>\n          </ul>\n        </Tag>\n      </Footer>\n    </Wrapper>\n  );\n}\n\nexport const query = graphql`\n  {\n    project: projectsCsv(slug: {eq: \"interconnected\"}) {\n      ...ProjectFragment\n    }\n    images: allFile(filter: {relativeDirectory: {eq: \"interconnected\"}}) {\n      nodes {\n        publicURL\n        relativePath\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n    }\n  }\n`;\n"],"names":["cover","thumbnail","className","image","childImageSharp","Footer","children","Heading","name","year","tagline","roles","client","websiteUrl","links","H1","join","href","target","map","text","url","Wrapper","project","projects","useStaticQuery","slug","description","nextProjectIndex","nodes","findIndex","p","nextProject","length","Layout","title","Link","to","Image","tag","gsap","ScrollTrigger","SignHereToFightThePandemic","data","images","getImage","createGetImageFromName","two","padding"],"sourceRoot":""}