{"version":3,"file":"component---src-pages-projects-js-819fec0138dc1dc17063.js","mappings":"oLAQe,SAASA,EAAT,GAAwC,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,UAE/BC,GAAQC,EAAAA,EAAAA,gBAAe,cAAvBD,KASP,OAAO,uBAAKD,UAAW,+BACnB,uBAAKA,UAAW,0DACZ,gBAAC,EAAAG,KAAD,CAAMC,GAAG,IAAIJ,UAAW,UAAU,wBAAMA,UAAW,sBAAjB,WAAlC,SACA,sBAAIA,UAAU,eACTC,EAAKI,MAAMC,KAAI,WAAcC,GAAd,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OAAoB,sBAAIC,IAAKH,GAAG,gBAAC,KAAD,CAAcI,UAAWR,EAAAA,KAAMC,GAAIK,GAAOD,SAGlG,wBAAMR,UAAWA,GAAYD,GAC7B,0BAAQC,UAAU,gBACd,qBAAGA,UAAU,sBAAb,qBAtBZY,QAAQC,IAAI,kI,2FCOL,SAASC,EAAT,GAAiC,IAAnBC,EAAkB,EAAlBA,MAAOhB,EAAW,EAAXA,SACxB,OAAO,uBAAKC,UAAU,SAClB,qBAAGA,UAAU,QAAQe,GACrB,qBAAGf,UAAW,YAAaD,IAM5B,SAASiB,EAAT,GAAiF,IAA1DC,EAAyD,EAAzDA,KAAMb,EAAmD,EAAnDA,GAAIO,EAA+C,EAA/CA,UAAWO,EAAoC,EAApCA,OAAQnB,EAA4B,EAA5BA,SAAUoB,EAAkB,EAAlBA,KAAMnB,EAAY,EAAZA,UAEjEoB,EAAIT,EACV,OAAO,gBAACS,EAAD,CAAGH,KAAMA,EAAMb,GAAIA,EAAIc,OAAQA,EAC5BlB,UAAWA,GACjB,wBAAMA,UAAW,sJAGZD,GAEJoB,GAITH,EAAaK,aAAe,CACxBV,UAAW,KAGf,IAAMW,EAAa,CACfC,GAtCG,YAAgC,IAAnBxB,EAAkB,EAAlBA,SAAUgB,EAAQ,EAARA,MAC1B,OAAO,0BAAQf,UAAU,mEACrB,uBAAKA,UAAU,mDACX,sBAAIA,UAAW,6CAA8Ce,GAC5DhB,KAmCTiB,aAAAA,GAEJ,Q,6GCjCe,SAASQ,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAC9B,GAAgCC,EAAAA,EAAAA,UAASD,EAAKE,UAAvCA,EAAP,UAGA,OAAO,gBAAC,IAAD,CAAQ3B,UAAU,QACrB,gBAAC,QAAD,CAAee,MAAO,aACtB,yBAAOf,UAAW,UACd,yBAAOA,UAAU,uBACjB,0BACI,sBAAIA,UAAU,aAAd,WACA,sBAAIA,UAAU,aAAd,QACA,sBAAIA,UAAU,aAAd,UACA,sBAAIA,UAAU,aAAd,UAGJ,6BAEC2B,EAAStB,MAAMC,KAAI,gBAtBPsB,EAsBSC,EAAF,EAAEA,KAAMrB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMqB,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,KAAkBC,GAApD,EAAwCC,WAAxC,EAAoDD,cAApD,OAAsE,sBAAIvB,IAAKD,EACLT,UAAW,uCAAyCiC,GAAgB,sCACpEE,QAASF,IAxB1FL,EAwB0HI,EAvBxI,kBAAMI,EAAAA,EAAAA,UAASR,MAwBV,sBAAI5B,UAAW,aAAcQ,GAC7B,sBAAIR,UAAW,YAAa8B,GAAQA,EAAKO,KAAK,OAC9C,sBAAIrC,UAAW,aAAc+B,GAC7B,sBAAI/B,UAAW,YAAa6B","sources":["webpack://michele-bruno/./src/components/Layout.js","webpack://michele-bruno/./src/components/Typography.js","webpack://michele-bruno/./src/pages/projects.js"],"sourcesContent":["import '../style/global.css'\nimport * as React from \"react\"\nimport {graphql, Link, useStaticQuery} from \"gatsby\";\nimport {AnimatedLink} from \"./Typography\";\n\n\nconsole.log(\"Hey, what are you looking for in this console? I'm a good developer, check my GitHub profile https://github.com/michelebruno/\")\n\nexport default function Layout({children, className}) {\n\n    const {menu} = useStaticQuery(graphql`{\n        menu:allContentfulMenu {\n            nodes {\n                name\n                slug\n            }\n        }\n    }`)\n\n    return <div className={\"dark:bg-gray-900 font-sans \"}>\n        <nav className={\"fixed top-0 w-full flex justify-between px-8 py-8 z-50\"}>\n            <Link to=\"/\" className={\"group \"}><span className={\"group-hover:italic\"}>michele</span>bruno</Link>\n            <ul className=\"flex gap-16\">\n                {menu.nodes.map(({name, slug},i) => <li key={i}><AnimatedLink component={Link} to={slug}>{name}</AnimatedLink></li>)}\n            </ul>\n        </nav>\n        <main className={className}>{children}</main>\n        <footer className=\"w-full p-8  \">\n            <p className=\"text-center w-full\">Â© Michele Bruno</p>\n        </footer>\n    </div>\n}\n\n","import React from \"react\";\n\n\nexport function H1({children, title}) {\n    return <header className=\"min-h-screen h-screen items-center flex flex-col justify-center\">\n        <div className=\"grid grid-cols-12 gap-x-16 auto-rows-min py-32 \">\n            <h1 className={\"col-start-3 col-span-6 text-9xl font-bold\"}>{title}</h1>\n            {children}\n        </div>\n    </header>\n\n}\n\nexport function Tag({title, children}) {\n    return <div className=\"pb-16\">\n        <p className=\"mb-8\">{title}</p>\n        <p className={\"text-2xl\"}>{children}</p>\n    </div>\n\n}\n\n\nexport function AnimatedLink({href, to, component, target, children, icon, className}) {\n\n    const C = component\n    return <C href={href} to={to} target={target}\n              className={className}>\n        <span className={\"inline-block relative \" +\n        \" animated-link before:absolute before:bottom-0 before:border-b-2 before:border-b-black before:transition-all before:w-full  \" +\n        \"\"}>\n            {children}\n        </span>\n        {icon}\n    </C>\n}\n\nAnimatedLink.defaultProps = {\n    component: 'a'\n}\n\nconst Typography = {\n    H1,\n    AnimatedLink\n}\nexport default Typography","import * as React from \"react\"\nimport Layout from \"../components/Layout\";\nimport {graphql, navigate} from \"gatsby\";\nimport {useState} from \"react\";\nimport Typography from \"../components/Typography\";\n\nfunction navigateOnClick(url) {\n    return () => navigate(url)\n}\n\n// TODO Sort by column\nexport default function Projects({data}) {\n    const [projects, setProjects] = useState(data.projects)\n\n\n    return <Layout className=\"mx-8\">\n        <Typography.H1 title={\"Projects\"}/>\n        <table className={\"w-full\"}>\n            <thead className=\"text-left uppercase\">\n            <tr>\n                <th className=\"py-4 pr-8\">Project</th>\n                <th className=\"py-4 px-8\">Type</th>\n                <th className=\"py-4 px-8\">Client</th>\n                <th className=\"py-4 pl-8\">Year</th>\n            </tr>\n            </thead>\n            <tbody>\n\n            {projects.nodes.map(({year, name, slug, type, client, link, websiteUrl, isPagePublic}) => <tr key={slug}\n                                                                                                          className={\"border-t-2 border-b-2 border-black \" + (isPagePublic && \"cursor-pointer hover:text-gray-500\")}\n                                                                                                          onClick={isPagePublic && navigateOnClick(link)}>\n                <td className={\"py-4 pr-8\"}>{name}</td>\n                <td className={\"p-4 px-8\"}>{type && type.join(', ')}</td>\n                <td className={\"py-4 px-8\"}>{client}</td>\n                <td className={\"p-4 pl-8\"}>{year}</td>\n            </tr>)}\n            </tbody>\n        </table>\n    </Layout>\n}\n\nexport const query = graphql`{\n    projects : allContentfulProjects(sort: {fields: [year], order: [DESC]}) {\n        nodes {\n            ...ProjectFragment\n        }\n    }\n}`"],"names":["Layout","children","className","menu","useStaticQuery","Link","to","nodes","map","i","name","slug","key","component","console","log","Tag","title","AnimatedLink","href","target","icon","C","defaultProps","Typography","H1","Projects","data","useState","projects","url","year","type","client","link","isPagePublic","websiteUrl","onClick","navigate","join"],"sourceRoot":""}