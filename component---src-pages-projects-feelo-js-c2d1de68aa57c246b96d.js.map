{"version":3,"file":"component---src-pages-projects-feelo-js-c2d1de68aa57c246b96d.js","mappings":"kQAYA,SAASA,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,OAC7B,OACE,2BACE,sBAAIC,UAAU,qBAAqBH,GAClCC,EAAMG,KAAI,SAAAC,GAAG,OACZ,gBAAC,IAAD,CAAOF,UAAU,0CAA0CG,IAAKD,EAAKE,MAAOL,EAAOG,SAK5E,SAASG,EAAT,GAAgE,IAAD,IAA1BC,KAAOC,EAAmB,EAAnBA,QAASR,EAAU,EAAVA,OAEhES,EAWED,EAXFC,KAEAC,GASEF,EAVFG,KAUEH,EATFE,OACAE,EAQEJ,EARFI,QACAC,EAOEL,EAPFK,UACAC,EAMEN,EANFM,MACAC,EAKEP,EALFO,KACAC,EAIER,EAJFQ,OACAC,EAGET,EAHFS,KACAC,EAEEV,EAFFU,WACAC,EACEX,EADFW,YAGIC,GAAWC,EAAAA,EAAAA,GAAuBrB,EAAOsB,MAAO,SAEtD,OACE,gBAAC,IAAD,CAASd,QAASA,GAChB,gBAAC,IAAD,CACEC,KAAMA,EACNG,QAASA,EACTG,KAAMA,EACNC,OAAQA,EACRE,WAAYA,EACZR,MAAOA,IAET,gBAAC,IAAD,CAAOI,MAAOA,EAAOD,UAAWA,IAChC,gBAAC,KAAD,CAASf,MAAM,WAAWG,UAAU,SAClC,sBAAIA,UAAU,mBAAmBkB,GACjC,gTAQF,uBAAKlB,UAAU,kCACb,gBAAC,IAAD,CACEI,MAAOe,EAAS,sBAChBG,iBAAiB,0BACjBtB,UAAU,kBAId,uBAAKA,UAAU,2DACb,gBAACJ,EAAD,CAAQE,MAAO,CAAC,qBAAsBC,OAAQoB,EAAUtB,MAAM,kBAC9D,gBAACD,EAAD,CACEE,MAAO,CAAC,6BAA8B,iCACtCC,OAAQoB,EACRtB,MAAM,sBAER,gBAACD,EAAD,CAAQE,MAAO,CAAC,qBAAsBC,OAAQoB,EAAUtB,MAAM,0BAC9D,gBAACD,EAAD,CAAQE,MAAO,CAAC,oBAAqBC,OAAQoB,EAAUtB,MAAM,iBAC7D,gBAACD,EAAD,CAAQE,MAAO,CAAC,qBAAsBC,OAAQoB,EAAUtB,MAAM,aAC9D,gBAACD,EAAD,CAAQE,MAAO,CAAC,qBAAsBC,OAAQoB,EAAUtB,MAAM,2BAGhE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAKA,MAAM,UAAX,4BAEE,2BAFF,kBAKA,gBAAC,KAAD,CAAKA,MAAM,WACT,0BACE,0CACA,kDACA,6CACA,gDAGJ,gBAAC,KAAD,CAAKA,MAAM,gBACT,0BACGmB,EAAKf,KAAI,SAAAsB,GAAC,OACT,sBAAIpB,IAAKoB,GAAIA,QAInB,gBAAC,KAAD,CAAK1B,MAAM,wBACT,0BACE,mCACA,yCACA","sources":["webpack://michele-bruno/./src/pages/projects/feelo.js"],"sourcesContent":["import * as React from 'react';\nimport {graphql, Link} from 'gatsby';\n\nimport Wrapper from '../../components/Project/Wrapper';\nimport Heading from '../../components/Project/Heading';\nimport Cover from '../../components/Project/Cover';\nimport {AnimatedLink, Tag, TextBox} from '../../components/Typography';\nimport Grid from '../../components/Grid';\nimport Image, {createGetImageFromName} from '../../components/Image';\nimport Slider from '../../components/Project/Slider';\nimport Arrow from '../../components/Arrow';\n\nfunction Mockup({title, names, images}) {\n  return (\n    <div>\n      <h3 className=\"fs-lg text-center\">{title}</h3>\n      {names.map(img => (\n        <Image className=\"w-full mb-16 rounded-2xl drop-shadow-xl\" key={img} image={images(img)} />\n      ))}\n    </div>\n  );\n}\nexport default function SignHereToFightThePandemic({data: {project, images}}) {\n  const {\n    name,\n    slug,\n    roles,\n    tagline,\n    thumbnail,\n    cover,\n    year,\n    client,\n    team,\n    websiteUrl,\n    description,\n  } = project;\n\n  const getImage = createGetImageFromName(images.nodes, 'feelo');\n\n  return (\n    <Wrapper project={project}>\n      <Heading\n        name={name}\n        tagline={tagline}\n        year={year}\n        client={client}\n        websiteUrl={websiteUrl}\n        roles={roles}\n      />\n      <Cover cover={cover} thumbnail={thumbnail} />\n      <TextBox title=\"Overview\" className=\"py-lg\">\n        <h3 className=\"fs-xl mb-2 pb-8\">{description}</h3>\n        <p>\n          Focused on people, not on disease: design of a multi-user app that provides tools for an\n          effective relationship between those suffering from Eating Disorders and their caregivers\n          through activities that encourage dialogue and reflection with a cognitive-behavioral\n          approach.\n        </p>\n      </TextBox>\n\n      <div className=\"grid   pb-lg px justify-center\">\n        <Image\n          image={getImage('feelo-trittico.png')}\n          pictureClassName=\"  aspect-w-4 aspect-h-3\"\n          className=\"object-cover\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 px pb-lg\">\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Daily journal\" />\n        <Mockup\n          names={['shared-activity-giulia.png', 'giulia-attivita-giasvolta.png']}\n          images={getImage}\n          title=\"Shared activities\"\n        />\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Individual activities\" />\n        <Mockup names={['informazioni.png']} images={getImage} title=\"Informations\" />\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Insights\" />\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Individual activities\" />\n      </div>\n\n      <TextBox>\n        <Tag title=\"Course\">\n          Interaction Design Studio\n          <br />\n          A.A. 2020/2021\n        </Tag>\n        <Tag title=\"Faculty\">\n          <ul>\n            <li>Fabio Sergio</li>\n            <li>Emanuele Della Valle</li>\n            <li>Marco La Mantia</li>\n            <li>Matteo Valoriani</li>\n          </ul>\n        </Tag>\n        <Tag title=\"Project team\">\n          <ul>\n            {team.map(t => (\n              <li key={t}>{t}</li>\n            ))}\n          </ul>\n        </Tag>\n        <Tag title=\"Tools and technology\">\n          <ul>\n            <li>Figma</li>\n            <li>Illustrator</li>\n            <li>GatsbyJs</li>\n          </ul>\n        </Tag>\n      </TextBox>\n    </Wrapper>\n  );\n}\n\nexport const query = graphql`\n  {\n    project: projectsCsv(slug: {eq: \"feelo\"}) {\n      ...ProjectFragment\n    }\n    images: allFile(filter: {relativeDirectory: {eq: \"feelo\"}}) {\n      nodes {\n        publicURL\n        relativePath\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n    }\n  }\n`;\n"],"names":["Mockup","title","names","images","className","map","img","key","image","SignHereToFightThePandemic","data","project","name","roles","slug","tagline","thumbnail","cover","year","client","team","websiteUrl","description","getImage","createGetImageFromName","nodes","pictureClassName","t"],"sourceRoot":""}