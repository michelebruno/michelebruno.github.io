{"version":3,"file":"component---src-pages-index-js-40b36683d5d27282cdbb.js","mappings":"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","sources":["webpack://michele-bruno/./src/components/Button.js","webpack://michele-bruno/./src/components/WorkTogether.js","webpack://michele-bruno/./src/components/ProjectCard.js","webpack://michele-bruno/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport {Link} from 'gatsby';\nimport Arrow from './Arrow';\nimport {AnimatedLink} from './Typography';\n\nexport default function Button({children, before, after, className, as: Component, ...props}) {\n  const buttonClassName = classNames(' inline-block transition-all', 'button-child');\n\n  const asideClassName = classNames(\n    buttonClassName,\n    'w-0 group-hover:w-[1em] group-hover:pr-2 overflow-hidden inline-block ',\n    'transition-all align-bottom'\n  );\n  return (\n    <Component\n      className={classNames(\n        'rounded-button group border-b-4 border-current inline-block ',\n        className\n      )}\n      {...props}\n    >\n      {before && <span className={asideClassName}>→</span>}\n      <span className={classNames(buttonClassName, 'py-1 text-current')}>{children}</span>\n      {after && <span className={asideClassName}>→</span>}\n    </Component>\n  );\n}\n\nButton.defaultProps = {\n  as: 'a',\n};\n","import * as React from 'react';\nimport Button from './Button';\n\nexport default function WorkTogether() {\n  return (\n    <section className=\"min-h-[80vh] border-b grid items-center\">\n      <div className=\"px items-center leading-tight\">\n        <p className=\"fs-3xl\">\n          Want to work together?\n          <br />\n          Let's{' '}\n          <Button before href=\"mailto:bm.michelebruno@gmail.com\">\n            get in touch.\n          </Button>\n        </p>\n        <p className=\"pt-4 fs-lg hidden\">\n          I'm currently looking for an internship, however you can write me <br />\n          if you need a freelance creative developer.\n        </p>\n      </div>\n    </section>\n  );\n}\n","import * as React from 'react';\nimport {graphql, Link, navigate, useStaticQuery} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Image from './Image';\nimport Button from './Button';\nimport {AnimatedLink, H3} from './Typography';\nimport Arrow from './Arrow';\n\nexport function ProjectCard({project, position, className, version}) {\n  const {projects} = useStaticQuery(graphql`\n    {\n      projects: allProjectsCsv {\n        nodes {\n          ...ProjectFragment\n        }\n      }\n    }\n  `);\n\n  const {name, year, type, slug, tagline, thumbnail} =\n    projects.nodes.find(({slug}) => slug === project) ||\n    console.error(`Project ${project} not found`);\n  const link = `/projects/${slug}/`;\n  if (version === 2) {\n    return (\n      <div\n        className={classNames(\n          'group overflow-hidden cursor-pointer',\n          'aspect-[16/9]  border-r relative',\n          className\n        )}\n      >\n        <Image\n          image={thumbnail}\n          className=\"bg-white object-cover h-full w-full absolute inset-0 opacity-0 group-hover:opacity-50 transition-all group-hover:scale-105\"\n        />\n        <div className=\"absolute inset-0 grid grid-rows-[12rem_auto_auto] px-32 py-32 \">\n          <h3 className=\"fs-3xl\">\n            {/* {position.toString().padStart(2, 0)}/ */}\n            {name}\n          </h3>\n          <div className=\"text-\">\n            <p className=\"group-hover:translate-y-full group-hover:opacity-0 transition-all text-gray\">\n              {type.join(' / ')}\n            </p>\n          </div>\n          <div className=\"self-end\">\n            <AnimatedLink as={Link} to={link} before>\n              View\n            </AnimatedLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (version === 3) {\n    return (\n      <div\n        className={classNames(\n          'ver-3 group overflow-hidden',\n          'aspect-[4/5] border relative',\n          className\n        )}\n        role=\"group\"\n        onClick={() => navigate(link)}\n      >\n        <Image\n          image={thumbnail}\n          className=\"bg-white object-cover h-full w-full absolute inset-0 lg:opacity-0 group-hover:opacity-100 transition-all duration-1000 group-hover:scale-105\"\n        />\n        <div className=\"bg-white absolute inset-0 opacity-50\" />\n        <div className=\"relative h-full inset-0 grid gap-x-0 grid-rows-3 lg:grid-rows-[8rem_auto_auto] px py  mix-blend-multiply\">\n          <H3>{name}</H3>\n          <div>\n            <div className=\"overflow-hidden pb\">\n              <div className=\"group-hover:translate-y-full group-hover:opacity-0 transition-all fs-lg\">\n                <h4 className=\"\">{tagline}</h4>\n                <p className=\"text-gray\">{type.join(' + ')}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"self-end\">\n            <AnimatedLink as={Link} to={link}>\n              View →\n            </AnimatedLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * CARD DEFAULT\n   */\n  return (\n    <Link to={link} className={classNames('group block  border-b px py', className)}>\n      <div className=\"flex relative mt-4 hover:text-brand \">\n        <div>\n          <div>\n            <h2 className=\"text-6xl inline\">\n              {/* {position.toString().padStart(2, 0)}/ */}\n              {name}\n            </h2>\n            <span className=\"fs-xl\"> ({year})</span>\n          </div>\n\n          <h3 className=\"fs-xl text-gray\">{tagline}</h3>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nProjectCard.propTypes = {\n  project: PropTypes.string.isRequired,\n};\n","import * as React from 'react';\nimport gsap from 'gsap';\nimport {useEffect, useRef} from 'react';\n\nimport {ScrollTrigger} from 'gsap/ScrollTrigger';\nimport classNames from 'classnames';\nimport {Link, navigate} from 'gatsby';\nimport {ProjectCard} from '../components/ProjectCard';\n\nimport Layout from '../components/Layout';\nimport Button from '../components/Button';\nimport {AnimatedLink, H2, H3} from '../components/Typography';\nimport WorkTogether from '../components/WorkTogether';\nimport Grid from '../components/Grid';\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst homeProjectSlugs = [\n  'disruptive',\n  'feelo',\n  'opinion-library',\n  'accessibilita-e-coinvolgere-tutti',\n  'sign-here-to-fight-the-pandemic',\n  'moodboard',\n];\n\nfunction IndexPage() {\n  const projectContainer = useRef();\n\n  useEffect(() => {\n    /*\n    gsap.timeline({\n                                           scrollTrigger: {\n                                               trigger: projectContainer.current,\n                                               pin: true,\n                                               scrub: 1,\n                                               snap: 1 / (homeProjectSlugs.length),\n                                               end: () => \"+=\" + (projectContainer.current.offsetWidth * homeProjectSlugs.length)\n                                           }\n                                       })\n                                       */\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"flex content-around items-center relative py\">\n        <h1 className=\"fs-3xl px py pb-lg leading-tight\">\n          <span className=\"\">Hello!</span> I'm Michele Bruno, an Italian <br />\n          <span className=\"inline-block font-sans not-italic\">UX Designer</span> and{' '}\n          <span className=\"inline-block font-sans not-italic\">Creative Developer,</span>\n          <br /> currently studing at{' '}\n          <AnimatedLink href=\"https://www.designdellacomunicazione.polimi.it/\">Polimi</AnimatedLink>\n          .\n        </h1>\n        <div className=\"hidden py text-gray text-left absolute bottom-0 left-0\">\n          <button className=\"scroll-button px\">Scroll</button>\n        </div>\n      </div>\n      <section className=\"\" ref={projectContainer}>\n        <Grid className=\"gap-0 border-t\">\n          {homeProjectSlugs.map((project, index) => (\n            <ProjectCard key={project} project={project} position={index + 1} className=\"\" />\n          ))}\n        </Grid>\n      </section>\n      <WorkTogether />\n    </Layout>\n  );\n}\n\nexport default IndexPage;\n"],"names":["Button","children","before","after","className","Component","as","props","buttonClassName","classNames","asideClassName","defaultProps","WorkTogether","href","ProjectCard","project","position","version","useStaticQuery","projects","nodes","find","slug","console","error","name","year","type","tagline","thumbnail","link","Image","image","join","Link","to","role","onClick","navigate","H3","gsap","ScrollTrigger","homeProjectSlugs","projectContainer","useRef","useEffect","Layout","ref","Grid","map","index","key"],"sourceRoot":""}