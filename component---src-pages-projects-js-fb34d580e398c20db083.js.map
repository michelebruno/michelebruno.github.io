{"version":3,"file":"component---src-pages-projects-js-fb34d580e398c20db083.js","mappings":"g0BAWe,SAASA,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAChC,GAAgCC,EAAAA,EAAAA,UAASD,EAAKE,UAAvCA,EAAP,KAEMC,GAFN,KAEgBD,EAASE,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,MAAR,EAAeC,OAAf,gCAEjCF,KAAMA,MAAAA,OAAF,EAAEA,EAAMG,KAAK,KACjBF,MAAOA,MAAAA,OAAF,EAAEA,EAAOE,KAAK,WAGrB,OACE,gBAAC,IAAD,CAAQC,UAAU,QAChB,gBAAC,QAAD,CAAeC,MAAM,aAErB,uBAAKD,UAAU,YACb,0BACEE,QAAS,WACPC,QAAQC,IAAIC,OAAOC,KAAKb,EAAQ,KAChC,IAAMc,EAAU,+BAAkC,CAACF,OAAOC,KAAKb,EAAQ,KACpEe,OAAOf,EAAQE,IAAIU,OAAOI,SAC1Bd,KAAI,SAAAe,GAAC,OAAIA,EAAEf,KAAI,SAAAgB,GAAC,UAAQA,EAAR,OAAcZ,KAAK,QACnCA,KAAK,MAEFa,EAAaC,UAAUN,GACvBO,EAAOC,SAASC,cAAc,KACpCF,EAAKG,aAAa,OAAQL,GAC1BE,EAAKG,aAAa,WAAY,gBAC9BF,SAASG,KAAKC,YAAYL,GAE1BA,EAAKM,UAdT,iBAoBF,yBAAOpB,UAAU,UACf,yBAAOA,UAAU,uBACf,0BACE,sBAAIA,UAAU,aAAd,WACA,sBAAIA,UAAU,aAAd,QACA,sBAAIA,UAAU,aAAd,UACA,sBAAIA,UAAU,aAAd,UAGJ,6BACGR,EAASE,MAAMC,KACd,gBAlDa0B,EAkDXC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAM5B,EAApB,EAAoBA,KAAM6B,EAA1B,EAA0BA,OAAQX,EAAlC,EAAkCA,KAAkBY,GAApD,EAAwCC,WAAxC,EAAoDD,cAApD,OACE,sBACEE,IAAKJ,EACLxB,UAAS,uCACP0B,GAAgB,sCAElBxB,QAASwB,IAxDAL,EAwDgCP,EAvDhD,kBAAMe,EAAAA,EAAAA,UAASR,MAyDR,sBAAIrB,UAAU,aAAauB,GAC3B,sBAAIvB,UAAU,YAAYJ,GAAQA,EAAKG,KAAK,OAC5C,sBAAIC,UAAU,aAAayB,GAC3B,sBAAIzB,UAAU,YAAYsB,Y,qBCnE3B,SAASQ,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIH,EAAKK,EAFLC,EAAS,GACTC,EAAa9B,OAAOC,KAAKyB,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAWC,OAAQH,IACjCL,EAAMO,EAAWF,GACbD,EAASK,QAAQT,IAAQ,IAC7BM,EAAON,GAAOG,EAAOH,IAGvB,OAAOM,E","sources":["webpack://michele-bruno/./src/pages/projects.js","webpack://michele-bruno/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react';\nimport {graphql, navigate} from 'gatsby';\nimport {useState} from 'react';\nimport Layout from '../components/Layout';\nimport Typography from '../components/Typography';\n\nfunction navigateOnClick(url) {\n  return () => navigate(url);\n}\n\n// TODO Sort by column\nexport default function Projects({data}) {\n  const [projects, setProjects] = useState(data.projects);\n\n  const flatten = projects.nodes.map(({type, roles, images, ...project}) => ({\n    ...project,\n    type: type?.join(','),\n    roles: roles?.join(','),\n  }));\n\n  return (\n    <Layout className=\"mx-8\">\n      <Typography.H1 title=\"Projects\" />\n\n      <div className=\"text-4xl\">\n        <button\n          onClick={() => {\n            console.log(Object.keys(flatten[0]));\n            const csvContent = `data:text/csv;charset=utf-8,${[Object.keys(flatten[0])]\n              .concat(flatten.map(Object.values))\n              .map(e => e.map(x => `\"${x}\"`).join(','))\n              .join('\\n')}`;\n\n            const encodedUri = encodeURI(csvContent);\n            const link = document.createElement('a');\n            link.setAttribute('href', encodedUri);\n            link.setAttribute('download', 'projects.csv');\n            document.body.appendChild(link); // Required for FF\n\n            link.click(); // This will download the data file named \"my_data.csv\".\n          }}\n        >\n          Download csv\n        </button>\n      </div>\n      <table className=\"w-full\">\n        <thead className=\"text-left uppercase\">\n          <tr>\n            <th className=\"py-4 pr-8\">Project</th>\n            <th className=\"py-4 px-8\">Type</th>\n            <th className=\"py-4 px-8\">Client</th>\n            <th className=\"py-4 pl-8\">Year</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projects.nodes.map(\n            ({year, name, slug, type, client, link, websiteUrl, isPagePublic}) => (\n              <tr\n                key={slug}\n                className={`border-t-2 border-b-2 border-black ${\n                  isPagePublic && 'cursor-pointer hover:text-gray-500'\n                }`}\n                onClick={isPagePublic && navigateOnClick(link)}\n              >\n                <td className=\"py-4 pr-8\">{name}</td>\n                <td className=\"p-4 px-8\">{type && type.join(', ')}</td>\n                <td className=\"py-4 px-8\">{client}</td>\n                <td className=\"p-4 pl-8\">{year}</td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  {\n    projects: allProjectsCsv(sort: {fields: [year], order: [DESC]}) {\n      nodes {\n        ...ProjectFragment\n      }\n    }\n  }\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["Projects","data","useState","projects","flatten","nodes","map","type","roles","images","join","className","title","onClick","console","log","Object","keys","csvContent","concat","values","e","x","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","url","year","name","slug","client","isPagePublic","websiteUrl","key","navigate","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","length","indexOf"],"sourceRoot":""}