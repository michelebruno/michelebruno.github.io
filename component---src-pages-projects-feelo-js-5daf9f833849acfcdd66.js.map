{"version":3,"file":"component---src-pages-projects-feelo-js-5daf9f833849acfcdd66.js","mappings":"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","sources":["webpack://michele-bruno/./src/components/Project/Cover.js","webpack://michele-bruno/./src/components/Project/Footer.js","webpack://michele-bruno/./src/components/Project/Heading.js","webpack://michele-bruno/./src/components/Project/Wrapper.js","webpack://michele-bruno/./src/images/feelo/MicheleBruno – Keynote Feelo.pdf","webpack://michele-bruno/./src/pages/projects/feelo.js"],"sourcesContent":["import * as React from 'react';\nimport Image from '../Image';\n\nexport default function ({cover, thumbnail}) {\n  return (\n    <div className=\"h-[80vh] overflow-hidden border-t border-b\">\n      <Image\n        image={typeof cover !== 'undefined' && cover?.childImageSharp ? cover : thumbnail}\n        className=\"h-full w-full object-cover scale-110 object-center\"\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\n\nexport default function Footer({children}) {\n  return (\n    <footer className=\" pb-lg px grid sm:grid-cols-2 lg:grid-cols-4  w-full\">{children}</footer>\n  );\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {AnimatedLink, H1} from '../Typography';\n\nexport default function Heading({name, year, tagline, roles, client, websiteUrl, links, children}) {\n  return (\n    <header className=\"grid grid-cols-1 md:grid-cols-4 items-end px py\">\n      <div className=\"md:col-span-3 pb md:pb-0\">\n        <div>\n          <H1 className=\"lg:inline break-words\">{name}</H1>\n          <span className=\"fs-xl\"> ({year})</span>\n        </div>\n        <h2 className=\"fs-xl text-gray pt-2\">{tagline}</h2>\n      </div>\n      <div className=\"md:pt-8 text-base flex flex-col\">\n        <ul>\n          {roles && (\n            <li>\n              <strong>Role:</strong> {roles.join(', ')}\n            </li>\n          )}\n          {client && (\n            <li>\n              <strong>Client:</strong> {client}\n            </li>\n          )}\n          {websiteUrl && (\n            <li>\n              <AnimatedLink href={websiteUrl} target=\"_blank\" className=\"font-semibold\">\n                Visit the website ↗\n              </AnimatedLink>\n            </li>\n          )}\n          {links &&\n            links.map(([text, url]) => (\n              <li>\n                <AnimatedLink href={url} target=\"_blank\" className=\"font-semibold\">\n                  {text} ↗\n                </AnimatedLink>\n              </li>\n            ))}\n          {children}\n        </ul>\n      </div>\n    </header>\n  );\n}\n\nHeading.propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({text: PropTypes.string.isRequired, url: PropTypes.string.isRequired})\n  ),\n};\n","import * as React from 'react';\nimport {ScrollTrigger} from 'gsap/ScrollTrigger';\nimport gsap from 'gsap';\nimport {graphql, Link, useStaticQuery} from 'gatsby';\nimport Layout from '../Layout';\nimport Typography, {AnimatedLink, H1, Tag, TextBox} from '../Typography';\nimport Marquee from '../Marquee';\nimport Arrow from '../Arrow';\nimport Grid from '../Grid';\nimport Image from '../Image';\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction Description({description, children}) {\n  return (\n    <TextBox title=\"Overview\">\n      <h3 className=\"fs-4xl mb-2 pb-8\">{description}</h3>\n      {children}\n    </TextBox>\n  );\n}\n\nexport default function Wrapper({project, children}) {\n  const {projects} = useStaticQuery(graphql`\n    query {\n      projects: allProjectsCsv(filter: {isPagePublic: {eq: true}}) {\n        nodes {\n          ...ProjectFragment\n        }\n      }\n    }\n  `);\n\n  const {name, slug, description} = project;\n\n  const nextProjectIndex = projects.nodes.findIndex(p => p.slug === slug) + 1;\n\n  const nextProject =\n    projects.nodes[projects.nodes.length > nextProjectIndex ? nextProjectIndex : 0];\n\n  return (\n    <Layout title={name} description={description}>\n      <div className=\"fs-lg\">{children}</div>\n\n      <Link\n        to={`/projects/${nextProject.slug}`}\n        className=\"min-h-[80vh] justify-center border-y grid grid-cols-1 lg:grid-cols-3 items-end px py-lg relative group overflow-hidden\"\n      >\n        <Image\n          image={nextProject.cover || nextProject.thumbnail}\n          className=\"bg-white object-cover h-full w-full absolute inset-0 opacity-0 group-hover:opacity-30 transition-all group-hover:scale-105\"\n        />\n        <div className=\"col-span-2 col-start-1 pb lg:pb-0 relative mix-blend-multiply\">\n          <div>\n            <p className=\"fs-lg\">Next project</p>\n            <H1\n              tag={Link}\n              to={`/projects/${nextProject.slug}`}\n              className=\"lg:inline leading-none transition-all break-words\"\n            >\n              {nextProject.name}\n            </H1>\n            <span className=\"fs-xl\"> ({nextProject.year})</span>\n          </div>\n          <h2 className=\"fs-xl text-gray \">{nextProject.tagline}</h2>\n        </div>\n        <div className=\"pt-8 text-base flex flex-col\" />\n      </Link>\n    </Layout>\n  );\n}\n","export default __webpack_public_path__ + \"static/MicheleBruno – Keynote Feelo-32aa1dd3c84149699508cc95943ccb21.pdf\";","import * as React from 'react';\nimport {graphql, Link} from 'gatsby';\n\nimport Wrapper from '../../components/Project/Wrapper';\nimport Heading from '../../components/Project/Heading';\nimport Cover from '../../components/Project/Cover';\nimport {AnimatedLink, Tag, TextBox} from '../../components/Typography';\nimport Grid from '../../components/Grid';\nimport Image, {createGetImageFromName} from '../../components/Image';\nimport keynoteUrl from '../../images/feelo/MicheleBruno – Keynote Feelo.pdf';\nimport Footer from '../../components/Project/Footer';\n\nfunction Mockup({title, names, images}) {\n  return (\n    <div>\n      <h3 className=\"fs-lg text-center pb-6\">{title}</h3>\n      {names.map(img => (\n        <Image className=\"w-full mb-16 rounded-2xl drop-shadow-xl\" key={img} image={images(img)} />\n      ))}\n    </div>\n  );\n}\n\nexport default function Feelo({data: {project, images}}) {\n  const {\n    name,\n    slug,\n    roles,\n    tagline,\n    thumbnail,\n    cover,\n    year,\n    client,\n    team,\n    websiteUrl,\n    description,\n  } = project;\n\n  const getImage = createGetImageFromName(images.nodes, 'feelo');\n\n  return (\n    <Wrapper project={project}>\n      <Heading\n        name={name}\n        tagline={tagline}\n        year={year}\n        client={client}\n        roles={roles}\n        links={[\n          [\n            'Open the prototype',\n            'https://www.figma.com/proto/WbY8lQIXAuVHePe6l1lqq8/IxD_Lab-C2_Feelo_Spritz?page-id=2261%3A12291&node-id=2261%3A17603&viewport=392%2C48%2C0.02&scaling=min-zoom&starting-point-node-id=4296%3A37856',\n          ],\n          ['Download the keynote', keynoteUrl],\n        ]}\n      />\n      <Cover cover={cover} thumbnail={thumbnail} />\n      <TextBox className=\"py-lg\">\n        <h3 className=\"fs-xl mb-2 pb-8 leading-relaxed\">{description}</h3>\n        <p>\n          The focus of the project is the design for safety: starting from the problems that emerged\n          during the Covid-19, we created a digital service that keeps users safe, without\n          compromising important activities that contribute to their personal and professional\n          development. The design of the service and its prototyping followed the principles of UX\n          and interaction design.\n        </p>\n      </TextBox>\n\n      <Grid padding className=\"justify-center\">\n        <Image\n          image={getImage('feelo-trittico.png')}\n          pictureClassName=\"aspect-w-4 aspect-h-3\"\n          className=\"object-cover\"\n        />\n      </Grid>\n\n      <Grid padding twelve>\n        <div className=\"col-span-6\">\n          <Image image={getImage('pres-sitoweb.png')} />\n        </div>\n        <div className=\"col-span-6\">\n          <Image image={getImage('pres-smartwatch.png')} />\n        </div>\n        <div className=\"col-span-4\">\n          <Image image={getImage('pres-ia.png')} />\n        </div>\n        <div className=\"col-span-4\">\n          <Image image={getImage('pres-wireframe.png')} />\n        </div>\n        <div className=\"col-span-4\">\n          <Image image={getImage('pres-architettura-it.png')} />\n        </div>\n      </Grid>\n      <div className=\"grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 px pb-lg\">\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Daily journal\" />\n        <Mockup\n          names={['shared-activity-giulia.png', 'giulia-attivita-giasvolta.png']}\n          images={getImage}\n          title=\"Shared activities\"\n        />\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Individual activities\" />\n        <Mockup names={['informazioni.png']} images={getImage} title=\"Informations\" />\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Insights\" />\n        <Mockup names={['giulia-diario.png']} images={getImage} title=\"Individual activities\" />\n      </div>\n\n      <Footer>\n        <Tag title=\"Course\">\n          Interaction Design Studio\n          <br />\n          A.A. 2020/2021\n        </Tag>\n        <Tag title=\"Faculty\">\n          <ul>\n            <li>Fabio Sergio</li>\n            <li>Emanuele Della Valle</li>\n            <li>Marco La Mantia</li>\n            <li>Matteo Valoriani</li>\n          </ul>\n        </Tag>\n        <Tag title=\"Project team\">\n          <ul>\n            {team.map(t => (\n              <li key={t}>{t}</li>\n            ))}\n          </ul>\n        </Tag>\n        <Tag title=\"Tools and technology\">\n          <ul>\n            <li>Figma</li>\n            <li>Illustrator</li>\n            <li>GatsbyJs</li>\n          </ul>\n        </Tag>\n      </Footer>\n    </Wrapper>\n  );\n}\n\nexport const query = graphql`\n  {\n    project: projectsCsv(slug: {eq: \"feelo\"}) {\n      ...ProjectFragment\n    }\n    images: allFile(filter: {relativeDirectory: {eq: \"feelo\"}}) {\n      nodes {\n        publicURL\n        relativePath\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n    }\n  }\n`;\n"],"names":["cover","thumbnail","className","image","childImageSharp","Footer","children","Heading","name","year","tagline","roles","client","websiteUrl","links","H1","join","href","target","map","text","url","Wrapper","project","projects","useStaticQuery","slug","description","nextProjectIndex","nodes","findIndex","p","nextProject","length","Layout","title","Link","to","Image","tag","gsap","ScrollTrigger","Mockup","names","images","img","key","Feelo","data","team","getImage","createGetImageFromName","keynoteUrl","Cover","Grid","padding","pictureClassName","twelve","t"],"sourceRoot":""}