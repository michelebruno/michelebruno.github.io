# This file was generated. Do not edit manually.

schema {
  query: Query
}

"Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`."
directive @childOf(
  "A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin."
  mimeTypes: [String!]! = [],
  "A list of types this type is a child of. Usually these are the types handled by a transformer plugin."
  types: [String!]! = []
) on OBJECT

"Add date formatting options."
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

"Do not infer field types from field values."
directive @dontInfer on OBJECT

"Link to File node by relative path."
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"Infer field types from field values."
directive @infer on OBJECT

"Link to node by foreign-key relation."
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"Define the mime-types handled by this type."
directive @mimeTypes(
  "The mime-types handled by this type."
  types: [String!]! = []
) on OBJECT

"""

DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".

Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

"Proxy resolver from another field."
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

interface RemoteFile {
  filename: String!
  filesize: Int
  "Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info."
  gatsbyImage(
    """

    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float,
    "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String,
    """

    Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int] = [750, 1080, 1366, 1920],
    cropFocus: [RemoteFileCropFocus],
    fit: RemoteFileFit = COVER,
    """

    The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF],
    """

    If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image.
    """
    height: Int,
    """

    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: RemoteFileLayout = CONSTRAINED,
    """

    A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
    """
    outputPixelDensities: [Float] = [0.25, 0.5, 1.0, 2.0],
    """

    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image (default).
    TRACED_SVG: deprecated. Will use DOMINANT_COLOR.
    NONE: no placeholder. Set the argument "backgroundColor" to use a fixed background color.
    """
    placeholder: RemoteFilePlaceholder = DOMINANT_COLOR,
    quality: Int = 75,
    """

    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
    container will be the full width of the screen. In these cases we will generate an appropriate value.
    """
    sizes: String,
    """

    The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
    The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON
  height: Int
  id: ID!
  mimeType: String!
  publicUrl: String!
  resize(
    aspectRatio: Float,
    cropFocus: [RemoteFileCropFocus],
    fit: RemoteFileFit = COVER,
    """

    The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    format: RemoteFileFormat = AUTO,
    height: Int,
    quality: Int = 75,
    width: Int
  ): RemoteFileResize
  width: Int
}

"A Sanity document"
interface SanityDocument {
  _createdAt: Date
  _id: String
  _rev: String
  _type: String
  _updatedAt: Date
}

union SanityBlockOrImage = SanityBlock | SanityImage

type Directory implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
  childImageSharp: ImageSharp
  "Returns the first child node of type ProjectsCsv or null if there are no children of given type on this node"
  childProjectsCsv: ProjectsCsv
  children: [Node!]!
  "Returns all children nodes filtered by type ImageSharp"
  childrenImageSharp: [ImageSharp]
  "Returns all children nodes filtered by type ProjectsCsv"
  childrenProjectsCsv: [ProjectsCsv]
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    jpegQuality: Int,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    pngQuality: Int,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = AUTO,
    toFormatBase64: ImageFormat = AUTO,
    traceSVG: Potrace,
    trim: Float = 0.0,
    webpQuality: Int
  ): ImageSharpFluid
  gatsbyImageData(
    """

    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float,
    "Options to pass to sharp when generating AVIF images."
    avifOptions: AVIFOptions,
    "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String,
    "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
    blurredOptions: BlurredOptions,
    """

    Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int],
    """

    The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [ImageFormat],
    """

    The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    matching the aspect ratio of the source image.
    """
    height: Int,
    "Options to pass to sharp when generating JPG images."
    jpgOptions: JPGOptions,
    """

    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: ImageLayout = CONSTRAINED,
    """

    A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    """
    outputPixelDensities: [Float],
    """

    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set "background" to use a fixed background color.
    """
    placeholder: ImagePlaceholder,
    "Options to pass to sharp when generating PNG images."
    pngOptions: PNGOptions,
    "The default quality. This is overridden by any format-specific options"
    quality: Int,
    """

    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download.
    You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    does not actually span the full width of the screen, in which case you should pass the correct size here.
    """
    sizes: String,
    "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
    tracedSVGOptions: Potrace,
    "Options to pass to sharp to control cropping and other image manipulations."
    transformOptions: TransformOptions,
    "Options to pass to sharp when generating WebP images."
    webpOptions: WebPOptions,
    """

    The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON!
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

type ProjectsCsv implements Node {
  children: [Node!]!
  client: String
  cover: File
  description: String
  id: ID!
  internal: Internal!
  isPagePublic: Boolean
  name: String
  parent: Node
  roles: [String]
  slug: String
  tagline: String
  team: [String]
  thumbnail: File
  type: [String]
  websiteUrl: String
  year(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
}

type ProjectsCsvConnection {
  distinct(field: ProjectsCsvFieldsEnum!): [String!]!
  edges: [ProjectsCsvEdge!]!
  group(field: ProjectsCsvFieldsEnum!, limit: Int, skip: Int): [ProjectsCsvGroupConnection!]!
  max(field: ProjectsCsvFieldsEnum!): Float
  min(field: ProjectsCsvFieldsEnum!): Float
  nodes: [ProjectsCsv!]!
  pageInfo: PageInfo!
  sum(field: ProjectsCsvFieldsEnum!): Float
  totalCount: Int!
}

type ProjectsCsvEdge {
  next: ProjectsCsv
  node: ProjectsCsv!
  previous: ProjectsCsv
}

type ProjectsCsvGroupConnection {
  distinct(field: ProjectsCsvFieldsEnum!): [String!]!
  edges: [ProjectsCsvEdge!]!
  field: String!
  fieldValue: String
  group(field: ProjectsCsvFieldsEnum!, limit: Int, skip: Int): [ProjectsCsvGroupConnection!]!
  max(field: ProjectsCsvFieldsEnum!): Float
  min(field: ProjectsCsvFieldsEnum!): Float
  nodes: [ProjectsCsv!]!
  pageInfo: PageInfo!
  sum(field: ProjectsCsvFieldsEnum!): Float
  totalCount: Int!
}

type Query {
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
  allProjectsCsv(filter: ProjectsCsvFilterInput, limit: Int, skip: Int, sort: ProjectsCsvSortInput): ProjectsCsvConnection!
  allSanityFileAsset(filter: SanityFileAssetFilterInput, limit: Int, skip: Int, sort: SanityFileAssetSortInput): SanityFileAssetConnection!
  allSanityImageAsset(filter: SanityImageAssetFilterInput, limit: Int, skip: Int, sort: SanityImageAssetSortInput): SanityImageAssetConnection!
  allSanityProject(filter: SanityProjectFilterInput, limit: Int, skip: Int, sort: SanityProjectSortInput): SanityProjectConnection!
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
  allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
  allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, childProjectsCsv: ProjectsCsvFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, childrenProjectsCsv: ProjectsCsvFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
  projectsCsv(children: NodeFilterListInput, client: StringQueryOperatorInput, cover: FileFilterInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, isPagePublic: BooleanQueryOperatorInput, name: StringQueryOperatorInput, parent: NodeFilterInput, roles: StringQueryOperatorInput, slug: StringQueryOperatorInput, tagline: StringQueryOperatorInput, team: StringQueryOperatorInput, thumbnail: FileFilterInput, type: StringQueryOperatorInput, websiteUrl: StringQueryOperatorInput, year: DateQueryOperatorInput): ProjectsCsv
  sanityFileAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, altText: StringQueryOperatorInput, assetId: StringQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): SanityFileAsset
  sanityImageAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawMetadata: JSONQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, altText: StringQueryOperatorInput, assetId: StringQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, filename: StringQueryOperatorInput, filesize: IntQueryOperatorInput, gatsbyImage: JSONQueryOperatorInput, gatsbyImageData: JSONQueryOperatorInput, height: IntQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, metadata: SanityImageMetadataFilterInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, publicUrl: StringQueryOperatorInput, resize: RemoteFileResizeFilterInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, uploadId: StringQueryOperatorInput, url: StringQueryOperatorInput, width: IntQueryOperatorInput): SanityImageAsset
  sanityProject(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawCoverImage: JSONQueryOperatorInput, _rawSlug: JSONQueryOperatorInput, _rawThumbnail: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, client: StringQueryOperatorInput, coverImage: SanityImageFilterInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, isPagePublic: BooleanQueryOperatorInput, parent: NodeFilterInput, roles: StringQueryOperatorInput, slug: SanitySlugFilterInput, tagline: StringQueryOperatorInput, thumbnail: SanityImageFilterInput, title: StringQueryOperatorInput, type: StringQueryOperatorInput, websiteUrl: StringQueryOperatorInput, year: StringQueryOperatorInput): SanityProject
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, jsxRuntime: StringQueryOperatorInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
  siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
  siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput): SitePage
  sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: JSONQueryOperatorInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type RemoteFileResize {
  height: Int
  src: String
  width: Int
}

type SanityAssetSourceData {
  _key: String
  _type: String
  id: String
  name: String
  url: String
}

type SanityBlock {
  _key: String
  _rawChildren(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  children: [SanitySpan]
  list: String
  style: String
}

type SanityCrossDatasetReference {
  _dataset: String
  _key: String
  _projectId: String
  _ref: String
  _type: String
  _weak: Boolean
}

type SanityFile {
  _key: String
  _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  asset: SanityFileAsset
}

type SanityFileAsset implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  altText: String
  assetId: String
  children: [Node!]!
  description: String
  extension: String
  id: ID!
  internal: Internal!
  label: String
  mimeType: String
  originalFilename: String
  parent: Node
  path: String
  sha1hash: String
  size: Float
  source: SanityAssetSourceData
  title: String
  url: String
}

type SanityFileAssetConnection {
  distinct(field: SanityFileAssetFieldsEnum!): [String!]!
  edges: [SanityFileAssetEdge!]!
  group(field: SanityFileAssetFieldsEnum!, limit: Int, skip: Int): [SanityFileAssetGroupConnection!]!
  max(field: SanityFileAssetFieldsEnum!): Float
  min(field: SanityFileAssetFieldsEnum!): Float
  nodes: [SanityFileAsset!]!
  pageInfo: PageInfo!
  sum(field: SanityFileAssetFieldsEnum!): Float
  totalCount: Int!
}

type SanityFileAssetEdge {
  next: SanityFileAsset
  node: SanityFileAsset!
  previous: SanityFileAsset
}

type SanityFileAssetGroupConnection {
  distinct(field: SanityFileAssetFieldsEnum!): [String!]!
  edges: [SanityFileAssetEdge!]!
  field: String!
  fieldValue: String
  group(field: SanityFileAssetFieldsEnum!, limit: Int, skip: Int): [SanityFileAssetGroupConnection!]!
  max(field: SanityFileAssetFieldsEnum!): Float
  min(field: SanityFileAssetFieldsEnum!): Float
  nodes: [SanityFileAsset!]!
  pageInfo: PageInfo!
  sum(field: SanityFileAssetFieldsEnum!): Float
  totalCount: Int!
}

type SanityGeopoint {
  _key: String
  _type: String
  alt: Float
  lat: Float
  lng: Float
}

type SanityImage {
  _key: String
  _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawCrop(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawHotspot(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  asset: SanityImageAsset
  crop: SanityImageCrop
  hotspot: SanityImageHotspot
}

type SanityImageAsset implements Node & RemoteFile & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawMetadata(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  altText: String
  assetId: String
  children: [Node!]!
  description: String
  extension: String
  filename: String!
  filesize: Int
  "Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info."
  gatsbyImage(
    """

    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float,
    "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String,
    """

    Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int] = [750, 1080, 1366, 1920],
    cropFocus: [RemoteFileCropFocus],
    fit: RemoteFileFit = COVER,
    """

    The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF],
    """

    If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image.
    """
    height: Int,
    """

    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: RemoteFileLayout = CONSTRAINED,
    """

    A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
    """
    outputPixelDensities: [Float] = [0.25, 0.5, 1.0, 2.0],
    """

    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image (default).
    TRACED_SVG: deprecated. Will use DOMINANT_COLOR.
    NONE: no placeholder. Set the argument "backgroundColor" to use a fixed background color.
    """
    placeholder: RemoteFilePlaceholder = DOMINANT_COLOR,
    quality: Int = 75,
    """

    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
    container will be the full width of the screen. In these cases we will generate an appropriate value.
    """
    sizes: String,
    """

    The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
    The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON
  gatsbyImageData(
    """

    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float,
    "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String,
    """

    Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int],
    fit: SanityImageFit = FILL,
    """

    The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [GatsbyImageFormat] = [NO_CHANGE, WEBP],
    "If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
    height: Int,
    """

    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: GatsbyImageLayout,
    """

    A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, 3x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
    """
    outputPixelDensities: [Float],
    """

    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    NONE: no placeholder.
    """
    placeholder: SanityGatsbyImagePlaceholder = DOMINANT_COLOR,
    """

    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
    container will be the full width of the screen. In these cases we will generate an appropriate value.
    """
    sizes: String,
    """

    The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
    The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON!
  height: Int
  id: ID!
  internal: Internal!
  label: String
  metadata: SanityImageMetadata
  mimeType: String!
  originalFilename: String
  parent: Node
  path: String
  publicUrl: String!
  resize(
    aspectRatio: Float,
    cropFocus: [RemoteFileCropFocus],
    fit: RemoteFileFit = COVER,
    """

    The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP, AVIF], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    format: RemoteFileFormat = AUTO,
    height: Int,
    quality: Int = 75,
    width: Int
  ): RemoteFileResize
  sha1hash: String
  size: Float
  source: SanityAssetSourceData
  title: String
  uploadId: String
  url: String
  width: Int
}

type SanityImageAssetConnection {
  distinct(field: SanityImageAssetFieldsEnum!): [String!]!
  edges: [SanityImageAssetEdge!]!
  group(field: SanityImageAssetFieldsEnum!, limit: Int, skip: Int): [SanityImageAssetGroupConnection!]!
  max(field: SanityImageAssetFieldsEnum!): Float
  min(field: SanityImageAssetFieldsEnum!): Float
  nodes: [SanityImageAsset!]!
  pageInfo: PageInfo!
  sum(field: SanityImageAssetFieldsEnum!): Float
  totalCount: Int!
}

type SanityImageAssetEdge {
  next: SanityImageAsset
  node: SanityImageAsset!
  previous: SanityImageAsset
}

type SanityImageAssetGroupConnection {
  distinct(field: SanityImageAssetFieldsEnum!): [String!]!
  edges: [SanityImageAssetEdge!]!
  field: String!
  fieldValue: String
  group(field: SanityImageAssetFieldsEnum!, limit: Int, skip: Int): [SanityImageAssetGroupConnection!]!
  max(field: SanityImageAssetFieldsEnum!): Float
  min(field: SanityImageAssetFieldsEnum!): Float
  nodes: [SanityImageAsset!]!
  pageInfo: PageInfo!
  sum(field: SanityImageAssetFieldsEnum!): Float
  totalCount: Int!
}

type SanityImageCrop {
  _key: String
  _type: String
  bottom: Float
  left: Float
  right: Float
  top: Float
}

type SanityImageDimensions {
  _key: String
  _type: String
  aspectRatio: Float
  height: Float
  width: Float
}

type SanityImageHotspot {
  _key: String
  _type: String
  height: Float
  width: Float
  x: Float
  y: Float
}

type SanityImageMetadata {
  _key: String
  _rawDimensions(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawLocation(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawPalette(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  blurHash: String
  dimensions: SanityImageDimensions
  hasAlpha: Boolean
  isOpaque: Boolean
  location: SanityGeopoint
  lqip: String
  palette: SanityImagePalette
}

type SanityImagePalette {
  _key: String
  _rawDarkMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawDarkVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawDominant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawLightMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawLightVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  darkMuted: SanityImagePaletteSwatch
  darkVibrant: SanityImagePaletteSwatch
  dominant: SanityImagePaletteSwatch
  lightMuted: SanityImagePaletteSwatch
  lightVibrant: SanityImagePaletteSwatch
  muted: SanityImagePaletteSwatch
  vibrant: SanityImagePaletteSwatch
}

type SanityImagePaletteSwatch {
  _key: String
  _type: String
  background: String
  foreground: String
  population: Float
  title: String
}

type SanityProject implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawCoverImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSlug(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawThumbnail(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  client: String
  coverImage: SanityImage
  description: String
  id: ID!
  internal: Internal!
  isPagePublic: Boolean
  parent: Node
  roles: [String]
  slug: SanitySlug
  tagline: String
  thumbnail: SanityImage
  title: String
  type: String
  websiteUrl: String
  year: String
}

type SanityProjectConnection {
  distinct(field: SanityProjectFieldsEnum!): [String!]!
  edges: [SanityProjectEdge!]!
  group(field: SanityProjectFieldsEnum!, limit: Int, skip: Int): [SanityProjectGroupConnection!]!
  max(field: SanityProjectFieldsEnum!): Float
  min(field: SanityProjectFieldsEnum!): Float
  nodes: [SanityProject!]!
  pageInfo: PageInfo!
  sum(field: SanityProjectFieldsEnum!): Float
  totalCount: Int!
}

type SanityProjectEdge {
  next: SanityProject
  node: SanityProject!
  previous: SanityProject
}

type SanityProjectGroupConnection {
  distinct(field: SanityProjectFieldsEnum!): [String!]!
  edges: [SanityProjectEdge!]!
  field: String!
  fieldValue: String
  group(field: SanityProjectFieldsEnum!, limit: Int, skip: Int): [SanityProjectGroupConnection!]!
  max(field: SanityProjectFieldsEnum!): Float
  min(field: SanityProjectFieldsEnum!): Float
  nodes: [SanityProject!]!
  pageInfo: PageInfo!
  sum(field: SanityProjectFieldsEnum!): Float
  totalCount: Int!
}

type SanitySlug {
  _key: String
  _type: String
  current: String
  source: String
}

type SanitySpan {
  _key: String
  _type: String
  marks: [String]
  text: String
}

type Site implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  jsxRuntime: String
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteFunction implements Node {
  absoluteCompiledFilePath: String!
  children: [Node!]!
  functionRoute: String!
  id: ID!
  internal: Internal!
  matchPath: String
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  parent: Node
  pluginName: String!
  relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

type SiteFunctionGroupConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  field: String!
  fieldValue: String
  group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

type SiteGroupConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  id: ID!
  internal: Internal!
  internalComponentName: String!
  matchPath: String
  pageContext: JSON
  parent: Node
  path: String!
  pluginCreator: SitePlugin
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: JSON
  parent: Node
  pluginFilepath: String
  pluginOptions: JSON
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  sum(field: SitePluginFieldsEnum!): Float
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  sum(field: SitePluginFieldsEnum!): Float
  totalCount: Int!
}

type SiteSiteMetadata {
  description: String
  image: String
  siteUrl: String
  title: String
  titleTemplate: String
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___children
  childProjectsCsv___children___children
  childProjectsCsv___children___children___children
  childProjectsCsv___children___children___id
  childProjectsCsv___children___id
  childProjectsCsv___children___internal___content
  childProjectsCsv___children___internal___contentDigest
  childProjectsCsv___children___internal___description
  childProjectsCsv___children___internal___fieldOwners
  childProjectsCsv___children___internal___ignoreType
  childProjectsCsv___children___internal___mediaType
  childProjectsCsv___children___internal___owner
  childProjectsCsv___children___internal___type
  childProjectsCsv___children___parent___children
  childProjectsCsv___children___parent___id
  childProjectsCsv___client
  childProjectsCsv___cover___absolutePath
  childProjectsCsv___cover___accessTime
  childProjectsCsv___cover___atime
  childProjectsCsv___cover___atimeMs
  childProjectsCsv___cover___base
  childProjectsCsv___cover___birthTime
  childProjectsCsv___cover___birthtime
  childProjectsCsv___cover___birthtimeMs
  childProjectsCsv___cover___blksize
  childProjectsCsv___cover___blocks
  childProjectsCsv___cover___changeTime
  childProjectsCsv___cover___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___cover___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___cover___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___cover___childProjectsCsv___children
  childProjectsCsv___cover___childProjectsCsv___client
  childProjectsCsv___cover___childProjectsCsv___description
  childProjectsCsv___cover___childProjectsCsv___id
  childProjectsCsv___cover___childProjectsCsv___isPagePublic
  childProjectsCsv___cover___childProjectsCsv___name
  childProjectsCsv___cover___childProjectsCsv___roles
  childProjectsCsv___cover___childProjectsCsv___slug
  childProjectsCsv___cover___childProjectsCsv___tagline
  childProjectsCsv___cover___childProjectsCsv___team
  childProjectsCsv___cover___childProjectsCsv___type
  childProjectsCsv___cover___childProjectsCsv___websiteUrl
  childProjectsCsv___cover___childProjectsCsv___year
  childProjectsCsv___cover___children
  childProjectsCsv___cover___childrenImageSharp
  childProjectsCsv___cover___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___cover___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___cover___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___cover___childrenProjectsCsv
  childProjectsCsv___cover___childrenProjectsCsv___children
  childProjectsCsv___cover___childrenProjectsCsv___client
  childProjectsCsv___cover___childrenProjectsCsv___description
  childProjectsCsv___cover___childrenProjectsCsv___id
  childProjectsCsv___cover___childrenProjectsCsv___isPagePublic
  childProjectsCsv___cover___childrenProjectsCsv___name
  childProjectsCsv___cover___childrenProjectsCsv___roles
  childProjectsCsv___cover___childrenProjectsCsv___slug
  childProjectsCsv___cover___childrenProjectsCsv___tagline
  childProjectsCsv___cover___childrenProjectsCsv___team
  childProjectsCsv___cover___childrenProjectsCsv___type
  childProjectsCsv___cover___childrenProjectsCsv___websiteUrl
  childProjectsCsv___cover___childrenProjectsCsv___year
  childProjectsCsv___cover___children___children
  childProjectsCsv___cover___children___id
  childProjectsCsv___cover___ctime
  childProjectsCsv___cover___ctimeMs
  childProjectsCsv___cover___dev
  childProjectsCsv___cover___dir
  childProjectsCsv___cover___ext
  childProjectsCsv___cover___extension
  childProjectsCsv___cover___gid
  childProjectsCsv___cover___id
  childProjectsCsv___cover___ino
  childProjectsCsv___cover___internal___content
  childProjectsCsv___cover___internal___contentDigest
  childProjectsCsv___cover___internal___description
  childProjectsCsv___cover___internal___fieldOwners
  childProjectsCsv___cover___internal___ignoreType
  childProjectsCsv___cover___internal___mediaType
  childProjectsCsv___cover___internal___owner
  childProjectsCsv___cover___internal___type
  childProjectsCsv___cover___mode
  childProjectsCsv___cover___modifiedTime
  childProjectsCsv___cover___mtime
  childProjectsCsv___cover___mtimeMs
  childProjectsCsv___cover___name
  childProjectsCsv___cover___nlink
  childProjectsCsv___cover___parent___children
  childProjectsCsv___cover___parent___id
  childProjectsCsv___cover___prettySize
  childProjectsCsv___cover___publicURL
  childProjectsCsv___cover___rdev
  childProjectsCsv___cover___relativeDirectory
  childProjectsCsv___cover___relativePath
  childProjectsCsv___cover___root
  childProjectsCsv___cover___size
  childProjectsCsv___cover___sourceInstanceName
  childProjectsCsv___cover___uid
  childProjectsCsv___description
  childProjectsCsv___id
  childProjectsCsv___internal___content
  childProjectsCsv___internal___contentDigest
  childProjectsCsv___internal___description
  childProjectsCsv___internal___fieldOwners
  childProjectsCsv___internal___ignoreType
  childProjectsCsv___internal___mediaType
  childProjectsCsv___internal___owner
  childProjectsCsv___internal___type
  childProjectsCsv___isPagePublic
  childProjectsCsv___name
  childProjectsCsv___parent___children
  childProjectsCsv___parent___children___children
  childProjectsCsv___parent___children___id
  childProjectsCsv___parent___id
  childProjectsCsv___parent___internal___content
  childProjectsCsv___parent___internal___contentDigest
  childProjectsCsv___parent___internal___description
  childProjectsCsv___parent___internal___fieldOwners
  childProjectsCsv___parent___internal___ignoreType
  childProjectsCsv___parent___internal___mediaType
  childProjectsCsv___parent___internal___owner
  childProjectsCsv___parent___internal___type
  childProjectsCsv___parent___parent___children
  childProjectsCsv___parent___parent___id
  childProjectsCsv___roles
  childProjectsCsv___slug
  childProjectsCsv___tagline
  childProjectsCsv___team
  childProjectsCsv___thumbnail___absolutePath
  childProjectsCsv___thumbnail___accessTime
  childProjectsCsv___thumbnail___atime
  childProjectsCsv___thumbnail___atimeMs
  childProjectsCsv___thumbnail___base
  childProjectsCsv___thumbnail___birthTime
  childProjectsCsv___thumbnail___birthtime
  childProjectsCsv___thumbnail___birthtimeMs
  childProjectsCsv___thumbnail___blksize
  childProjectsCsv___thumbnail___blocks
  childProjectsCsv___thumbnail___changeTime
  childProjectsCsv___thumbnail___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___thumbnail___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___thumbnail___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___thumbnail___childProjectsCsv___children
  childProjectsCsv___thumbnail___childProjectsCsv___client
  childProjectsCsv___thumbnail___childProjectsCsv___description
  childProjectsCsv___thumbnail___childProjectsCsv___id
  childProjectsCsv___thumbnail___childProjectsCsv___isPagePublic
  childProjectsCsv___thumbnail___childProjectsCsv___name
  childProjectsCsv___thumbnail___childProjectsCsv___roles
  childProjectsCsv___thumbnail___childProjectsCsv___slug
  childProjectsCsv___thumbnail___childProjectsCsv___tagline
  childProjectsCsv___thumbnail___childProjectsCsv___team
  childProjectsCsv___thumbnail___childProjectsCsv___type
  childProjectsCsv___thumbnail___childProjectsCsv___websiteUrl
  childProjectsCsv___thumbnail___childProjectsCsv___year
  childProjectsCsv___thumbnail___children
  childProjectsCsv___thumbnail___childrenImageSharp
  childProjectsCsv___thumbnail___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___thumbnail___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___thumbnail___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childProjectsCsv___thumbnail___childrenProjectsCsv
  childProjectsCsv___thumbnail___childrenProjectsCsv___children
  childProjectsCsv___thumbnail___childrenProjectsCsv___client
  childProjectsCsv___thumbnail___childrenProjectsCsv___description
  childProjectsCsv___thumbnail___childrenProjectsCsv___id
  childProjectsCsv___thumbnail___childrenProjectsCsv___isPagePublic
  childProjectsCsv___thumbnail___childrenProjectsCsv___name
  childProjectsCsv___thumbnail___childrenProjectsCsv___roles
  childProjectsCsv___thumbnail___childrenProjectsCsv___slug
  childProjectsCsv___thumbnail___childrenProjectsCsv___tagline
  childProjectsCsv___thumbnail___childrenProjectsCsv___team
  childProjectsCsv___thumbnail___childrenProjectsCsv___type
  childProjectsCsv___thumbnail___childrenProjectsCsv___websiteUrl
  childProjectsCsv___thumbnail___childrenProjectsCsv___year
  childProjectsCsv___thumbnail___children___children
  childProjectsCsv___thumbnail___children___id
  childProjectsCsv___thumbnail___ctime
  childProjectsCsv___thumbnail___ctimeMs
  childProjectsCsv___thumbnail___dev
  childProjectsCsv___thumbnail___dir
  childProjectsCsv___thumbnail___ext
  childProjectsCsv___thumbnail___extension
  childProjectsCsv___thumbnail___gid
  childProjectsCsv___thumbnail___id
  childProjectsCsv___thumbnail___ino
  childProjectsCsv___thumbnail___internal___content
  childProjectsCsv___thumbnail___internal___contentDigest
  childProjectsCsv___thumbnail___internal___description
  childProjectsCsv___thumbnail___internal___fieldOwners
  childProjectsCsv___thumbnail___internal___ignoreType
  childProjectsCsv___thumbnail___internal___mediaType
  childProjectsCsv___thumbnail___internal___owner
  childProjectsCsv___thumbnail___internal___type
  childProjectsCsv___thumbnail___mode
  childProjectsCsv___thumbnail___modifiedTime
  childProjectsCsv___thumbnail___mtime
  childProjectsCsv___thumbnail___mtimeMs
  childProjectsCsv___thumbnail___name
  childProjectsCsv___thumbnail___nlink
  childProjectsCsv___thumbnail___parent___children
  childProjectsCsv___thumbnail___parent___id
  childProjectsCsv___thumbnail___prettySize
  childProjectsCsv___thumbnail___publicURL
  childProjectsCsv___thumbnail___rdev
  childProjectsCsv___thumbnail___relativeDirectory
  childProjectsCsv___thumbnail___relativePath
  childProjectsCsv___thumbnail___root
  childProjectsCsv___thumbnail___size
  childProjectsCsv___thumbnail___sourceInstanceName
  childProjectsCsv___thumbnail___uid
  childProjectsCsv___type
  childProjectsCsv___websiteUrl
  childProjectsCsv___year
  children
  childrenImageSharp
  childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv
  childrenProjectsCsv___children
  childrenProjectsCsv___children___children
  childrenProjectsCsv___children___children___children
  childrenProjectsCsv___children___children___id
  childrenProjectsCsv___children___id
  childrenProjectsCsv___children___internal___content
  childrenProjectsCsv___children___internal___contentDigest
  childrenProjectsCsv___children___internal___description
  childrenProjectsCsv___children___internal___fieldOwners
  childrenProjectsCsv___children___internal___ignoreType
  childrenProjectsCsv___children___internal___mediaType
  childrenProjectsCsv___children___internal___owner
  childrenProjectsCsv___children___internal___type
  childrenProjectsCsv___children___parent___children
  childrenProjectsCsv___children___parent___id
  childrenProjectsCsv___client
  childrenProjectsCsv___cover___absolutePath
  childrenProjectsCsv___cover___accessTime
  childrenProjectsCsv___cover___atime
  childrenProjectsCsv___cover___atimeMs
  childrenProjectsCsv___cover___base
  childrenProjectsCsv___cover___birthTime
  childrenProjectsCsv___cover___birthtime
  childrenProjectsCsv___cover___birthtimeMs
  childrenProjectsCsv___cover___blksize
  childrenProjectsCsv___cover___blocks
  childrenProjectsCsv___cover___changeTime
  childrenProjectsCsv___cover___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___cover___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___cover___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___cover___childProjectsCsv___children
  childrenProjectsCsv___cover___childProjectsCsv___client
  childrenProjectsCsv___cover___childProjectsCsv___description
  childrenProjectsCsv___cover___childProjectsCsv___id
  childrenProjectsCsv___cover___childProjectsCsv___isPagePublic
  childrenProjectsCsv___cover___childProjectsCsv___name
  childrenProjectsCsv___cover___childProjectsCsv___roles
  childrenProjectsCsv___cover___childProjectsCsv___slug
  childrenProjectsCsv___cover___childProjectsCsv___tagline
  childrenProjectsCsv___cover___childProjectsCsv___team
  childrenProjectsCsv___cover___childProjectsCsv___type
  childrenProjectsCsv___cover___childProjectsCsv___websiteUrl
  childrenProjectsCsv___cover___childProjectsCsv___year
  childrenProjectsCsv___cover___children
  childrenProjectsCsv___cover___childrenImageSharp
  childrenProjectsCsv___cover___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___cover___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___cover___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___cover___childrenProjectsCsv
  childrenProjectsCsv___cover___childrenProjectsCsv___children
  childrenProjectsCsv___cover___childrenProjectsCsv___client
  childrenProjectsCsv___cover___childrenProjectsCsv___description
  childrenProjectsCsv___cover___childrenProjectsCsv___id
  childrenProjectsCsv___cover___childrenProjectsCsv___isPagePublic
  childrenProjectsCsv___cover___childrenProjectsCsv___name
  childrenProjectsCsv___cover___childrenProjectsCsv___roles
  childrenProjectsCsv___cover___childrenProjectsCsv___slug
  childrenProjectsCsv___cover___childrenProjectsCsv___tagline
  childrenProjectsCsv___cover___childrenProjectsCsv___team
  childrenProjectsCsv___cover___childrenProjectsCsv___type
  childrenProjectsCsv___cover___childrenProjectsCsv___websiteUrl
  childrenProjectsCsv___cover___childrenProjectsCsv___year
  childrenProjectsCsv___cover___children___children
  childrenProjectsCsv___cover___children___id
  childrenProjectsCsv___cover___ctime
  childrenProjectsCsv___cover___ctimeMs
  childrenProjectsCsv___cover___dev
  childrenProjectsCsv___cover___dir
  childrenProjectsCsv___cover___ext
  childrenProjectsCsv___cover___extension
  childrenProjectsCsv___cover___gid
  childrenProjectsCsv___cover___id
  childrenProjectsCsv___cover___ino
  childrenProjectsCsv___cover___internal___content
  childrenProjectsCsv___cover___internal___contentDigest
  childrenProjectsCsv___cover___internal___description
  childrenProjectsCsv___cover___internal___fieldOwners
  childrenProjectsCsv___cover___internal___ignoreType
  childrenProjectsCsv___cover___internal___mediaType
  childrenProjectsCsv___cover___internal___owner
  childrenProjectsCsv___cover___internal___type
  childrenProjectsCsv___cover___mode
  childrenProjectsCsv___cover___modifiedTime
  childrenProjectsCsv___cover___mtime
  childrenProjectsCsv___cover___mtimeMs
  childrenProjectsCsv___cover___name
  childrenProjectsCsv___cover___nlink
  childrenProjectsCsv___cover___parent___children
  childrenProjectsCsv___cover___parent___id
  childrenProjectsCsv___cover___prettySize
  childrenProjectsCsv___cover___publicURL
  childrenProjectsCsv___cover___rdev
  childrenProjectsCsv___cover___relativeDirectory
  childrenProjectsCsv___cover___relativePath
  childrenProjectsCsv___cover___root
  childrenProjectsCsv___cover___size
  childrenProjectsCsv___cover___sourceInstanceName
  childrenProjectsCsv___cover___uid
  childrenProjectsCsv___description
  childrenProjectsCsv___id
  childrenProjectsCsv___internal___content
  childrenProjectsCsv___internal___contentDigest
  childrenProjectsCsv___internal___description
  childrenProjectsCsv___internal___fieldOwners
  childrenProjectsCsv___internal___ignoreType
  childrenProjectsCsv___internal___mediaType
  childrenProjectsCsv___internal___owner
  childrenProjectsCsv___internal___type
  childrenProjectsCsv___isPagePublic
  childrenProjectsCsv___name
  childrenProjectsCsv___parent___children
  childrenProjectsCsv___parent___children___children
  childrenProjectsCsv___parent___children___id
  childrenProjectsCsv___parent___id
  childrenProjectsCsv___parent___internal___content
  childrenProjectsCsv___parent___internal___contentDigest
  childrenProjectsCsv___parent___internal___description
  childrenProjectsCsv___parent___internal___fieldOwners
  childrenProjectsCsv___parent___internal___ignoreType
  childrenProjectsCsv___parent___internal___mediaType
  childrenProjectsCsv___parent___internal___owner
  childrenProjectsCsv___parent___internal___type
  childrenProjectsCsv___parent___parent___children
  childrenProjectsCsv___parent___parent___id
  childrenProjectsCsv___roles
  childrenProjectsCsv___slug
  childrenProjectsCsv___tagline
  childrenProjectsCsv___team
  childrenProjectsCsv___thumbnail___absolutePath
  childrenProjectsCsv___thumbnail___accessTime
  childrenProjectsCsv___thumbnail___atime
  childrenProjectsCsv___thumbnail___atimeMs
  childrenProjectsCsv___thumbnail___base
  childrenProjectsCsv___thumbnail___birthTime
  childrenProjectsCsv___thumbnail___birthtime
  childrenProjectsCsv___thumbnail___birthtimeMs
  childrenProjectsCsv___thumbnail___blksize
  childrenProjectsCsv___thumbnail___blocks
  childrenProjectsCsv___thumbnail___changeTime
  childrenProjectsCsv___thumbnail___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___thumbnail___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___thumbnail___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___thumbnail___childProjectsCsv___children
  childrenProjectsCsv___thumbnail___childProjectsCsv___client
  childrenProjectsCsv___thumbnail___childProjectsCsv___description
  childrenProjectsCsv___thumbnail___childProjectsCsv___id
  childrenProjectsCsv___thumbnail___childProjectsCsv___isPagePublic
  childrenProjectsCsv___thumbnail___childProjectsCsv___name
  childrenProjectsCsv___thumbnail___childProjectsCsv___roles
  childrenProjectsCsv___thumbnail___childProjectsCsv___slug
  childrenProjectsCsv___thumbnail___childProjectsCsv___tagline
  childrenProjectsCsv___thumbnail___childProjectsCsv___team
  childrenProjectsCsv___thumbnail___childProjectsCsv___type
  childrenProjectsCsv___thumbnail___childProjectsCsv___websiteUrl
  childrenProjectsCsv___thumbnail___childProjectsCsv___year
  childrenProjectsCsv___thumbnail___children
  childrenProjectsCsv___thumbnail___childrenImageSharp
  childrenProjectsCsv___thumbnail___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___thumbnail___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___thumbnail___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenProjectsCsv___thumbnail___childrenProjectsCsv
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___children
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___client
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___description
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___id
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___isPagePublic
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___name
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___roles
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___slug
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___tagline
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___team
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___type
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___websiteUrl
  childrenProjectsCsv___thumbnail___childrenProjectsCsv___year
  childrenProjectsCsv___thumbnail___children___children
  childrenProjectsCsv___thumbnail___children___id
  childrenProjectsCsv___thumbnail___ctime
  childrenProjectsCsv___thumbnail___ctimeMs
  childrenProjectsCsv___thumbnail___dev
  childrenProjectsCsv___thumbnail___dir
  childrenProjectsCsv___thumbnail___ext
  childrenProjectsCsv___thumbnail___extension
  childrenProjectsCsv___thumbnail___gid
  childrenProjectsCsv___thumbnail___id
  childrenProjectsCsv___thumbnail___ino
  childrenProjectsCsv___thumbnail___internal___content
  childrenProjectsCsv___thumbnail___internal___contentDigest
  childrenProjectsCsv___thumbnail___internal___description
  childrenProjectsCsv___thumbnail___internal___fieldOwners
  childrenProjectsCsv___thumbnail___internal___ignoreType
  childrenProjectsCsv___thumbnail___internal___mediaType
  childrenProjectsCsv___thumbnail___internal___owner
  childrenProjectsCsv___thumbnail___internal___type
  childrenProjectsCsv___thumbnail___mode
  childrenProjectsCsv___thumbnail___modifiedTime
  childrenProjectsCsv___thumbnail___mtime
  childrenProjectsCsv___thumbnail___mtimeMs
  childrenProjectsCsv___thumbnail___name
  childrenProjectsCsv___thumbnail___nlink
  childrenProjectsCsv___thumbnail___parent___children
  childrenProjectsCsv___thumbnail___parent___id
  childrenProjectsCsv___thumbnail___prettySize
  childrenProjectsCsv___thumbnail___publicURL
  childrenProjectsCsv___thumbnail___rdev
  childrenProjectsCsv___thumbnail___relativeDirectory
  childrenProjectsCsv___thumbnail___relativePath
  childrenProjectsCsv___thumbnail___root
  childrenProjectsCsv___thumbnail___size
  childrenProjectsCsv___thumbnail___sourceInstanceName
  childrenProjectsCsv___thumbnail___uid
  childrenProjectsCsv___type
  childrenProjectsCsv___websiteUrl
  childrenProjectsCsv___year
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum GatsbyImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum GatsbyImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum GatsbyImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum ImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum ImageSharpFieldsEnum {
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum ProjectsCsvFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  client
  cover___absolutePath
  cover___accessTime
  cover___atime
  cover___atimeMs
  cover___base
  cover___birthTime
  cover___birthtime
  cover___birthtimeMs
  cover___blksize
  cover___blocks
  cover___changeTime
  cover___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childProjectsCsv___children
  cover___childProjectsCsv___children___children
  cover___childProjectsCsv___children___id
  cover___childProjectsCsv___client
  cover___childProjectsCsv___cover___absolutePath
  cover___childProjectsCsv___cover___accessTime
  cover___childProjectsCsv___cover___atime
  cover___childProjectsCsv___cover___atimeMs
  cover___childProjectsCsv___cover___base
  cover___childProjectsCsv___cover___birthTime
  cover___childProjectsCsv___cover___birthtime
  cover___childProjectsCsv___cover___birthtimeMs
  cover___childProjectsCsv___cover___blksize
  cover___childProjectsCsv___cover___blocks
  cover___childProjectsCsv___cover___changeTime
  cover___childProjectsCsv___cover___children
  cover___childProjectsCsv___cover___childrenImageSharp
  cover___childProjectsCsv___cover___childrenProjectsCsv
  cover___childProjectsCsv___cover___ctime
  cover___childProjectsCsv___cover___ctimeMs
  cover___childProjectsCsv___cover___dev
  cover___childProjectsCsv___cover___dir
  cover___childProjectsCsv___cover___ext
  cover___childProjectsCsv___cover___extension
  cover___childProjectsCsv___cover___gid
  cover___childProjectsCsv___cover___id
  cover___childProjectsCsv___cover___ino
  cover___childProjectsCsv___cover___mode
  cover___childProjectsCsv___cover___modifiedTime
  cover___childProjectsCsv___cover___mtime
  cover___childProjectsCsv___cover___mtimeMs
  cover___childProjectsCsv___cover___name
  cover___childProjectsCsv___cover___nlink
  cover___childProjectsCsv___cover___prettySize
  cover___childProjectsCsv___cover___publicURL
  cover___childProjectsCsv___cover___rdev
  cover___childProjectsCsv___cover___relativeDirectory
  cover___childProjectsCsv___cover___relativePath
  cover___childProjectsCsv___cover___root
  cover___childProjectsCsv___cover___size
  cover___childProjectsCsv___cover___sourceInstanceName
  cover___childProjectsCsv___cover___uid
  cover___childProjectsCsv___description
  cover___childProjectsCsv___id
  cover___childProjectsCsv___internal___content
  cover___childProjectsCsv___internal___contentDigest
  cover___childProjectsCsv___internal___description
  cover___childProjectsCsv___internal___fieldOwners
  cover___childProjectsCsv___internal___ignoreType
  cover___childProjectsCsv___internal___mediaType
  cover___childProjectsCsv___internal___owner
  cover___childProjectsCsv___internal___type
  cover___childProjectsCsv___isPagePublic
  cover___childProjectsCsv___name
  cover___childProjectsCsv___parent___children
  cover___childProjectsCsv___parent___id
  cover___childProjectsCsv___roles
  cover___childProjectsCsv___slug
  cover___childProjectsCsv___tagline
  cover___childProjectsCsv___team
  cover___childProjectsCsv___thumbnail___absolutePath
  cover___childProjectsCsv___thumbnail___accessTime
  cover___childProjectsCsv___thumbnail___atime
  cover___childProjectsCsv___thumbnail___atimeMs
  cover___childProjectsCsv___thumbnail___base
  cover___childProjectsCsv___thumbnail___birthTime
  cover___childProjectsCsv___thumbnail___birthtime
  cover___childProjectsCsv___thumbnail___birthtimeMs
  cover___childProjectsCsv___thumbnail___blksize
  cover___childProjectsCsv___thumbnail___blocks
  cover___childProjectsCsv___thumbnail___changeTime
  cover___childProjectsCsv___thumbnail___children
  cover___childProjectsCsv___thumbnail___childrenImageSharp
  cover___childProjectsCsv___thumbnail___childrenProjectsCsv
  cover___childProjectsCsv___thumbnail___ctime
  cover___childProjectsCsv___thumbnail___ctimeMs
  cover___childProjectsCsv___thumbnail___dev
  cover___childProjectsCsv___thumbnail___dir
  cover___childProjectsCsv___thumbnail___ext
  cover___childProjectsCsv___thumbnail___extension
  cover___childProjectsCsv___thumbnail___gid
  cover___childProjectsCsv___thumbnail___id
  cover___childProjectsCsv___thumbnail___ino
  cover___childProjectsCsv___thumbnail___mode
  cover___childProjectsCsv___thumbnail___modifiedTime
  cover___childProjectsCsv___thumbnail___mtime
  cover___childProjectsCsv___thumbnail___mtimeMs
  cover___childProjectsCsv___thumbnail___name
  cover___childProjectsCsv___thumbnail___nlink
  cover___childProjectsCsv___thumbnail___prettySize
  cover___childProjectsCsv___thumbnail___publicURL
  cover___childProjectsCsv___thumbnail___rdev
  cover___childProjectsCsv___thumbnail___relativeDirectory
  cover___childProjectsCsv___thumbnail___relativePath
  cover___childProjectsCsv___thumbnail___root
  cover___childProjectsCsv___thumbnail___size
  cover___childProjectsCsv___thumbnail___sourceInstanceName
  cover___childProjectsCsv___thumbnail___uid
  cover___childProjectsCsv___type
  cover___childProjectsCsv___websiteUrl
  cover___childProjectsCsv___year
  cover___children
  cover___childrenImageSharp
  cover___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover___childrenProjectsCsv
  cover___childrenProjectsCsv___children
  cover___childrenProjectsCsv___children___children
  cover___childrenProjectsCsv___children___id
  cover___childrenProjectsCsv___client
  cover___childrenProjectsCsv___cover___absolutePath
  cover___childrenProjectsCsv___cover___accessTime
  cover___childrenProjectsCsv___cover___atime
  cover___childrenProjectsCsv___cover___atimeMs
  cover___childrenProjectsCsv___cover___base
  cover___childrenProjectsCsv___cover___birthTime
  cover___childrenProjectsCsv___cover___birthtime
  cover___childrenProjectsCsv___cover___birthtimeMs
  cover___childrenProjectsCsv___cover___blksize
  cover___childrenProjectsCsv___cover___blocks
  cover___childrenProjectsCsv___cover___changeTime
  cover___childrenProjectsCsv___cover___children
  cover___childrenProjectsCsv___cover___childrenImageSharp
  cover___childrenProjectsCsv___cover___childrenProjectsCsv
  cover___childrenProjectsCsv___cover___ctime
  cover___childrenProjectsCsv___cover___ctimeMs
  cover___childrenProjectsCsv___cover___dev
  cover___childrenProjectsCsv___cover___dir
  cover___childrenProjectsCsv___cover___ext
  cover___childrenProjectsCsv___cover___extension
  cover___childrenProjectsCsv___cover___gid
  cover___childrenProjectsCsv___cover___id
  cover___childrenProjectsCsv___cover___ino
  cover___childrenProjectsCsv___cover___mode
  cover___childrenProjectsCsv___cover___modifiedTime
  cover___childrenProjectsCsv___cover___mtime
  cover___childrenProjectsCsv___cover___mtimeMs
  cover___childrenProjectsCsv___cover___name
  cover___childrenProjectsCsv___cover___nlink
  cover___childrenProjectsCsv___cover___prettySize
  cover___childrenProjectsCsv___cover___publicURL
  cover___childrenProjectsCsv___cover___rdev
  cover___childrenProjectsCsv___cover___relativeDirectory
  cover___childrenProjectsCsv___cover___relativePath
  cover___childrenProjectsCsv___cover___root
  cover___childrenProjectsCsv___cover___size
  cover___childrenProjectsCsv___cover___sourceInstanceName
  cover___childrenProjectsCsv___cover___uid
  cover___childrenProjectsCsv___description
  cover___childrenProjectsCsv___id
  cover___childrenProjectsCsv___internal___content
  cover___childrenProjectsCsv___internal___contentDigest
  cover___childrenProjectsCsv___internal___description
  cover___childrenProjectsCsv___internal___fieldOwners
  cover___childrenProjectsCsv___internal___ignoreType
  cover___childrenProjectsCsv___internal___mediaType
  cover___childrenProjectsCsv___internal___owner
  cover___childrenProjectsCsv___internal___type
  cover___childrenProjectsCsv___isPagePublic
  cover___childrenProjectsCsv___name
  cover___childrenProjectsCsv___parent___children
  cover___childrenProjectsCsv___parent___id
  cover___childrenProjectsCsv___roles
  cover___childrenProjectsCsv___slug
  cover___childrenProjectsCsv___tagline
  cover___childrenProjectsCsv___team
  cover___childrenProjectsCsv___thumbnail___absolutePath
  cover___childrenProjectsCsv___thumbnail___accessTime
  cover___childrenProjectsCsv___thumbnail___atime
  cover___childrenProjectsCsv___thumbnail___atimeMs
  cover___childrenProjectsCsv___thumbnail___base
  cover___childrenProjectsCsv___thumbnail___birthTime
  cover___childrenProjectsCsv___thumbnail___birthtime
  cover___childrenProjectsCsv___thumbnail___birthtimeMs
  cover___childrenProjectsCsv___thumbnail___blksize
  cover___childrenProjectsCsv___thumbnail___blocks
  cover___childrenProjectsCsv___thumbnail___changeTime
  cover___childrenProjectsCsv___thumbnail___children
  cover___childrenProjectsCsv___thumbnail___childrenImageSharp
  cover___childrenProjectsCsv___thumbnail___childrenProjectsCsv
  cover___childrenProjectsCsv___thumbnail___ctime
  cover___childrenProjectsCsv___thumbnail___ctimeMs
  cover___childrenProjectsCsv___thumbnail___dev
  cover___childrenProjectsCsv___thumbnail___dir
  cover___childrenProjectsCsv___thumbnail___ext
  cover___childrenProjectsCsv___thumbnail___extension
  cover___childrenProjectsCsv___thumbnail___gid
  cover___childrenProjectsCsv___thumbnail___id
  cover___childrenProjectsCsv___thumbnail___ino
  cover___childrenProjectsCsv___thumbnail___mode
  cover___childrenProjectsCsv___thumbnail___modifiedTime
  cover___childrenProjectsCsv___thumbnail___mtime
  cover___childrenProjectsCsv___thumbnail___mtimeMs
  cover___childrenProjectsCsv___thumbnail___name
  cover___childrenProjectsCsv___thumbnail___nlink
  cover___childrenProjectsCsv___thumbnail___prettySize
  cover___childrenProjectsCsv___thumbnail___publicURL
  cover___childrenProjectsCsv___thumbnail___rdev
  cover___childrenProjectsCsv___thumbnail___relativeDirectory
  cover___childrenProjectsCsv___thumbnail___relativePath
  cover___childrenProjectsCsv___thumbnail___root
  cover___childrenProjectsCsv___thumbnail___size
  cover___childrenProjectsCsv___thumbnail___sourceInstanceName
  cover___childrenProjectsCsv___thumbnail___uid
  cover___childrenProjectsCsv___type
  cover___childrenProjectsCsv___websiteUrl
  cover___childrenProjectsCsv___year
  cover___children___children
  cover___children___children___children
  cover___children___children___id
  cover___children___id
  cover___children___internal___content
  cover___children___internal___contentDigest
  cover___children___internal___description
  cover___children___internal___fieldOwners
  cover___children___internal___ignoreType
  cover___children___internal___mediaType
  cover___children___internal___owner
  cover___children___internal___type
  cover___children___parent___children
  cover___children___parent___id
  cover___ctime
  cover___ctimeMs
  cover___dev
  cover___dir
  cover___ext
  cover___extension
  cover___gid
  cover___id
  cover___ino
  cover___internal___content
  cover___internal___contentDigest
  cover___internal___description
  cover___internal___fieldOwners
  cover___internal___ignoreType
  cover___internal___mediaType
  cover___internal___owner
  cover___internal___type
  cover___mode
  cover___modifiedTime
  cover___mtime
  cover___mtimeMs
  cover___name
  cover___nlink
  cover___parent___children
  cover___parent___children___children
  cover___parent___children___id
  cover___parent___id
  cover___parent___internal___content
  cover___parent___internal___contentDigest
  cover___parent___internal___description
  cover___parent___internal___fieldOwners
  cover___parent___internal___ignoreType
  cover___parent___internal___mediaType
  cover___parent___internal___owner
  cover___parent___internal___type
  cover___parent___parent___children
  cover___parent___parent___id
  cover___prettySize
  cover___publicURL
  cover___rdev
  cover___relativeDirectory
  cover___relativePath
  cover___root
  cover___size
  cover___sourceInstanceName
  cover___uid
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isPagePublic
  name
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  roles
  slug
  tagline
  team
  thumbnail___absolutePath
  thumbnail___accessTime
  thumbnail___atime
  thumbnail___atimeMs
  thumbnail___base
  thumbnail___birthTime
  thumbnail___birthtime
  thumbnail___birthtimeMs
  thumbnail___blksize
  thumbnail___blocks
  thumbnail___changeTime
  thumbnail___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childProjectsCsv___children
  thumbnail___childProjectsCsv___children___children
  thumbnail___childProjectsCsv___children___id
  thumbnail___childProjectsCsv___client
  thumbnail___childProjectsCsv___cover___absolutePath
  thumbnail___childProjectsCsv___cover___accessTime
  thumbnail___childProjectsCsv___cover___atime
  thumbnail___childProjectsCsv___cover___atimeMs
  thumbnail___childProjectsCsv___cover___base
  thumbnail___childProjectsCsv___cover___birthTime
  thumbnail___childProjectsCsv___cover___birthtime
  thumbnail___childProjectsCsv___cover___birthtimeMs
  thumbnail___childProjectsCsv___cover___blksize
  thumbnail___childProjectsCsv___cover___blocks
  thumbnail___childProjectsCsv___cover___changeTime
  thumbnail___childProjectsCsv___cover___children
  thumbnail___childProjectsCsv___cover___childrenImageSharp
  thumbnail___childProjectsCsv___cover___childrenProjectsCsv
  thumbnail___childProjectsCsv___cover___ctime
  thumbnail___childProjectsCsv___cover___ctimeMs
  thumbnail___childProjectsCsv___cover___dev
  thumbnail___childProjectsCsv___cover___dir
  thumbnail___childProjectsCsv___cover___ext
  thumbnail___childProjectsCsv___cover___extension
  thumbnail___childProjectsCsv___cover___gid
  thumbnail___childProjectsCsv___cover___id
  thumbnail___childProjectsCsv___cover___ino
  thumbnail___childProjectsCsv___cover___mode
  thumbnail___childProjectsCsv___cover___modifiedTime
  thumbnail___childProjectsCsv___cover___mtime
  thumbnail___childProjectsCsv___cover___mtimeMs
  thumbnail___childProjectsCsv___cover___name
  thumbnail___childProjectsCsv___cover___nlink
  thumbnail___childProjectsCsv___cover___prettySize
  thumbnail___childProjectsCsv___cover___publicURL
  thumbnail___childProjectsCsv___cover___rdev
  thumbnail___childProjectsCsv___cover___relativeDirectory
  thumbnail___childProjectsCsv___cover___relativePath
  thumbnail___childProjectsCsv___cover___root
  thumbnail___childProjectsCsv___cover___size
  thumbnail___childProjectsCsv___cover___sourceInstanceName
  thumbnail___childProjectsCsv___cover___uid
  thumbnail___childProjectsCsv___description
  thumbnail___childProjectsCsv___id
  thumbnail___childProjectsCsv___internal___content
  thumbnail___childProjectsCsv___internal___contentDigest
  thumbnail___childProjectsCsv___internal___description
  thumbnail___childProjectsCsv___internal___fieldOwners
  thumbnail___childProjectsCsv___internal___ignoreType
  thumbnail___childProjectsCsv___internal___mediaType
  thumbnail___childProjectsCsv___internal___owner
  thumbnail___childProjectsCsv___internal___type
  thumbnail___childProjectsCsv___isPagePublic
  thumbnail___childProjectsCsv___name
  thumbnail___childProjectsCsv___parent___children
  thumbnail___childProjectsCsv___parent___id
  thumbnail___childProjectsCsv___roles
  thumbnail___childProjectsCsv___slug
  thumbnail___childProjectsCsv___tagline
  thumbnail___childProjectsCsv___team
  thumbnail___childProjectsCsv___thumbnail___absolutePath
  thumbnail___childProjectsCsv___thumbnail___accessTime
  thumbnail___childProjectsCsv___thumbnail___atime
  thumbnail___childProjectsCsv___thumbnail___atimeMs
  thumbnail___childProjectsCsv___thumbnail___base
  thumbnail___childProjectsCsv___thumbnail___birthTime
  thumbnail___childProjectsCsv___thumbnail___birthtime
  thumbnail___childProjectsCsv___thumbnail___birthtimeMs
  thumbnail___childProjectsCsv___thumbnail___blksize
  thumbnail___childProjectsCsv___thumbnail___blocks
  thumbnail___childProjectsCsv___thumbnail___changeTime
  thumbnail___childProjectsCsv___thumbnail___children
  thumbnail___childProjectsCsv___thumbnail___childrenImageSharp
  thumbnail___childProjectsCsv___thumbnail___childrenProjectsCsv
  thumbnail___childProjectsCsv___thumbnail___ctime
  thumbnail___childProjectsCsv___thumbnail___ctimeMs
  thumbnail___childProjectsCsv___thumbnail___dev
  thumbnail___childProjectsCsv___thumbnail___dir
  thumbnail___childProjectsCsv___thumbnail___ext
  thumbnail___childProjectsCsv___thumbnail___extension
  thumbnail___childProjectsCsv___thumbnail___gid
  thumbnail___childProjectsCsv___thumbnail___id
  thumbnail___childProjectsCsv___thumbnail___ino
  thumbnail___childProjectsCsv___thumbnail___mode
  thumbnail___childProjectsCsv___thumbnail___modifiedTime
  thumbnail___childProjectsCsv___thumbnail___mtime
  thumbnail___childProjectsCsv___thumbnail___mtimeMs
  thumbnail___childProjectsCsv___thumbnail___name
  thumbnail___childProjectsCsv___thumbnail___nlink
  thumbnail___childProjectsCsv___thumbnail___prettySize
  thumbnail___childProjectsCsv___thumbnail___publicURL
  thumbnail___childProjectsCsv___thumbnail___rdev
  thumbnail___childProjectsCsv___thumbnail___relativeDirectory
  thumbnail___childProjectsCsv___thumbnail___relativePath
  thumbnail___childProjectsCsv___thumbnail___root
  thumbnail___childProjectsCsv___thumbnail___size
  thumbnail___childProjectsCsv___thumbnail___sourceInstanceName
  thumbnail___childProjectsCsv___thumbnail___uid
  thumbnail___childProjectsCsv___type
  thumbnail___childProjectsCsv___websiteUrl
  thumbnail___childProjectsCsv___year
  thumbnail___children
  thumbnail___childrenImageSharp
  thumbnail___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___childrenProjectsCsv
  thumbnail___childrenProjectsCsv___children
  thumbnail___childrenProjectsCsv___children___children
  thumbnail___childrenProjectsCsv___children___id
  thumbnail___childrenProjectsCsv___client
  thumbnail___childrenProjectsCsv___cover___absolutePath
  thumbnail___childrenProjectsCsv___cover___accessTime
  thumbnail___childrenProjectsCsv___cover___atime
  thumbnail___childrenProjectsCsv___cover___atimeMs
  thumbnail___childrenProjectsCsv___cover___base
  thumbnail___childrenProjectsCsv___cover___birthTime
  thumbnail___childrenProjectsCsv___cover___birthtime
  thumbnail___childrenProjectsCsv___cover___birthtimeMs
  thumbnail___childrenProjectsCsv___cover___blksize
  thumbnail___childrenProjectsCsv___cover___blocks
  thumbnail___childrenProjectsCsv___cover___changeTime
  thumbnail___childrenProjectsCsv___cover___children
  thumbnail___childrenProjectsCsv___cover___childrenImageSharp
  thumbnail___childrenProjectsCsv___cover___childrenProjectsCsv
  thumbnail___childrenProjectsCsv___cover___ctime
  thumbnail___childrenProjectsCsv___cover___ctimeMs
  thumbnail___childrenProjectsCsv___cover___dev
  thumbnail___childrenProjectsCsv___cover___dir
  thumbnail___childrenProjectsCsv___cover___ext
  thumbnail___childrenProjectsCsv___cover___extension
  thumbnail___childrenProjectsCsv___cover___gid
  thumbnail___childrenProjectsCsv___cover___id
  thumbnail___childrenProjectsCsv___cover___ino
  thumbnail___childrenProjectsCsv___cover___mode
  thumbnail___childrenProjectsCsv___cover___modifiedTime
  thumbnail___childrenProjectsCsv___cover___mtime
  thumbnail___childrenProjectsCsv___cover___mtimeMs
  thumbnail___childrenProjectsCsv___cover___name
  thumbnail___childrenProjectsCsv___cover___nlink
  thumbnail___childrenProjectsCsv___cover___prettySize
  thumbnail___childrenProjectsCsv___cover___publicURL
  thumbnail___childrenProjectsCsv___cover___rdev
  thumbnail___childrenProjectsCsv___cover___relativeDirectory
  thumbnail___childrenProjectsCsv___cover___relativePath
  thumbnail___childrenProjectsCsv___cover___root
  thumbnail___childrenProjectsCsv___cover___size
  thumbnail___childrenProjectsCsv___cover___sourceInstanceName
  thumbnail___childrenProjectsCsv___cover___uid
  thumbnail___childrenProjectsCsv___description
  thumbnail___childrenProjectsCsv___id
  thumbnail___childrenProjectsCsv___internal___content
  thumbnail___childrenProjectsCsv___internal___contentDigest
  thumbnail___childrenProjectsCsv___internal___description
  thumbnail___childrenProjectsCsv___internal___fieldOwners
  thumbnail___childrenProjectsCsv___internal___ignoreType
  thumbnail___childrenProjectsCsv___internal___mediaType
  thumbnail___childrenProjectsCsv___internal___owner
  thumbnail___childrenProjectsCsv___internal___type
  thumbnail___childrenProjectsCsv___isPagePublic
  thumbnail___childrenProjectsCsv___name
  thumbnail___childrenProjectsCsv___parent___children
  thumbnail___childrenProjectsCsv___parent___id
  thumbnail___childrenProjectsCsv___roles
  thumbnail___childrenProjectsCsv___slug
  thumbnail___childrenProjectsCsv___tagline
  thumbnail___childrenProjectsCsv___team
  thumbnail___childrenProjectsCsv___thumbnail___absolutePath
  thumbnail___childrenProjectsCsv___thumbnail___accessTime
  thumbnail___childrenProjectsCsv___thumbnail___atime
  thumbnail___childrenProjectsCsv___thumbnail___atimeMs
  thumbnail___childrenProjectsCsv___thumbnail___base
  thumbnail___childrenProjectsCsv___thumbnail___birthTime
  thumbnail___childrenProjectsCsv___thumbnail___birthtime
  thumbnail___childrenProjectsCsv___thumbnail___birthtimeMs
  thumbnail___childrenProjectsCsv___thumbnail___blksize
  thumbnail___childrenProjectsCsv___thumbnail___blocks
  thumbnail___childrenProjectsCsv___thumbnail___changeTime
  thumbnail___childrenProjectsCsv___thumbnail___children
  thumbnail___childrenProjectsCsv___thumbnail___childrenImageSharp
  thumbnail___childrenProjectsCsv___thumbnail___childrenProjectsCsv
  thumbnail___childrenProjectsCsv___thumbnail___ctime
  thumbnail___childrenProjectsCsv___thumbnail___ctimeMs
  thumbnail___childrenProjectsCsv___thumbnail___dev
  thumbnail___childrenProjectsCsv___thumbnail___dir
  thumbnail___childrenProjectsCsv___thumbnail___ext
  thumbnail___childrenProjectsCsv___thumbnail___extension
  thumbnail___childrenProjectsCsv___thumbnail___gid
  thumbnail___childrenProjectsCsv___thumbnail___id
  thumbnail___childrenProjectsCsv___thumbnail___ino
  thumbnail___childrenProjectsCsv___thumbnail___mode
  thumbnail___childrenProjectsCsv___thumbnail___modifiedTime
  thumbnail___childrenProjectsCsv___thumbnail___mtime
  thumbnail___childrenProjectsCsv___thumbnail___mtimeMs
  thumbnail___childrenProjectsCsv___thumbnail___name
  thumbnail___childrenProjectsCsv___thumbnail___nlink
  thumbnail___childrenProjectsCsv___thumbnail___prettySize
  thumbnail___childrenProjectsCsv___thumbnail___publicURL
  thumbnail___childrenProjectsCsv___thumbnail___rdev
  thumbnail___childrenProjectsCsv___thumbnail___relativeDirectory
  thumbnail___childrenProjectsCsv___thumbnail___relativePath
  thumbnail___childrenProjectsCsv___thumbnail___root
  thumbnail___childrenProjectsCsv___thumbnail___size
  thumbnail___childrenProjectsCsv___thumbnail___sourceInstanceName
  thumbnail___childrenProjectsCsv___thumbnail___uid
  thumbnail___childrenProjectsCsv___type
  thumbnail___childrenProjectsCsv___websiteUrl
  thumbnail___childrenProjectsCsv___year
  thumbnail___children___children
  thumbnail___children___children___children
  thumbnail___children___children___id
  thumbnail___children___id
  thumbnail___children___internal___content
  thumbnail___children___internal___contentDigest
  thumbnail___children___internal___description
  thumbnail___children___internal___fieldOwners
  thumbnail___children___internal___ignoreType
  thumbnail___children___internal___mediaType
  thumbnail___children___internal___owner
  thumbnail___children___internal___type
  thumbnail___children___parent___children
  thumbnail___children___parent___id
  thumbnail___ctime
  thumbnail___ctimeMs
  thumbnail___dev
  thumbnail___dir
  thumbnail___ext
  thumbnail___extension
  thumbnail___gid
  thumbnail___id
  thumbnail___ino
  thumbnail___internal___content
  thumbnail___internal___contentDigest
  thumbnail___internal___description
  thumbnail___internal___fieldOwners
  thumbnail___internal___ignoreType
  thumbnail___internal___mediaType
  thumbnail___internal___owner
  thumbnail___internal___type
  thumbnail___mode
  thumbnail___modifiedTime
  thumbnail___mtime
  thumbnail___mtimeMs
  thumbnail___name
  thumbnail___nlink
  thumbnail___parent___children
  thumbnail___parent___children___children
  thumbnail___parent___children___id
  thumbnail___parent___id
  thumbnail___parent___internal___content
  thumbnail___parent___internal___contentDigest
  thumbnail___parent___internal___description
  thumbnail___parent___internal___fieldOwners
  thumbnail___parent___internal___ignoreType
  thumbnail___parent___internal___mediaType
  thumbnail___parent___internal___owner
  thumbnail___parent___internal___type
  thumbnail___parent___parent___children
  thumbnail___parent___parent___id
  thumbnail___prettySize
  thumbnail___publicURL
  thumbnail___rdev
  thumbnail___relativeDirectory
  thumbnail___relativePath
  thumbnail___root
  thumbnail___size
  thumbnail___sourceInstanceName
  thumbnail___uid
  type
  websiteUrl
  year
}

enum RemoteFileCropFocus {
  BOTTOM
  CENTER
  EDGES
  ENTROPY
  FACES
  LEFT
  RIGHT
  TOP
}

enum RemoteFileFit {
  CONTAIN
  COVER
  FILL
  OUTSIDE
}

enum RemoteFileFormat {
  AUTO
  AVIF
  JPG
  PNG
  WEBP
}

enum RemoteFileLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum RemoteFilePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum SanityFileAssetFieldsEnum {
  _createdAt
  _id
  _key
  _rawSource
  _rev
  _type
  _updatedAt
  altText
  assetId
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  extension
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  label
  mimeType
  originalFilename
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  sha1hash
  size
  source____key
  source____type
  source___id
  source___name
  source___url
  title
  url
}

enum SanityGatsbyImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
}

enum SanityImageAssetFieldsEnum {
  _createdAt
  _id
  _key
  _rawMetadata
  _rawSource
  _rev
  _type
  _updatedAt
  altText
  assetId
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  description
  extension
  filename
  filesize
  gatsbyImage @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  height
  id
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  label
  metadata____key
  metadata____rawDimensions
  metadata____rawLocation
  metadata____rawPalette
  metadata____type
  metadata___blurHash
  metadata___dimensions____key
  metadata___dimensions____type
  metadata___dimensions___aspectRatio
  metadata___dimensions___height
  metadata___dimensions___width
  metadata___hasAlpha
  metadata___isOpaque
  metadata___location____key
  metadata___location____type
  metadata___location___alt
  metadata___location___lat
  metadata___location___lng
  metadata___lqip
  metadata___palette____key
  metadata___palette____rawDarkMuted
  metadata___palette____rawDarkVibrant
  metadata___palette____rawDominant
  metadata___palette____rawLightMuted
  metadata___palette____rawLightVibrant
  metadata___palette____rawMuted
  metadata___palette____rawVibrant
  metadata___palette____type
  metadata___palette___darkMuted____key
  metadata___palette___darkMuted____type
  metadata___palette___darkMuted___background
  metadata___palette___darkMuted___foreground
  metadata___palette___darkMuted___population
  metadata___palette___darkMuted___title
  metadata___palette___darkVibrant____key
  metadata___palette___darkVibrant____type
  metadata___palette___darkVibrant___background
  metadata___palette___darkVibrant___foreground
  metadata___palette___darkVibrant___population
  metadata___palette___darkVibrant___title
  metadata___palette___dominant____key
  metadata___palette___dominant____type
  metadata___palette___dominant___background
  metadata___palette___dominant___foreground
  metadata___palette___dominant___population
  metadata___palette___dominant___title
  metadata___palette___lightMuted____key
  metadata___palette___lightMuted____type
  metadata___palette___lightMuted___background
  metadata___palette___lightMuted___foreground
  metadata___palette___lightMuted___population
  metadata___palette___lightMuted___title
  metadata___palette___lightVibrant____key
  metadata___palette___lightVibrant____type
  metadata___palette___lightVibrant___background
  metadata___palette___lightVibrant___foreground
  metadata___palette___lightVibrant___population
  metadata___palette___lightVibrant___title
  metadata___palette___muted____key
  metadata___palette___muted____type
  metadata___palette___muted___background
  metadata___palette___muted___foreground
  metadata___palette___muted___population
  metadata___palette___muted___title
  metadata___palette___vibrant____key
  metadata___palette___vibrant____type
  metadata___palette___vibrant___background
  metadata___palette___vibrant___foreground
  metadata___palette___vibrant___population
  metadata___palette___vibrant___title
  mimeType
  originalFilename
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  path
  publicUrl
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sha1hash
  size
  source____key
  source____type
  source___id
  source___name
  source___url
  title
  uploadId
  url
  width
}

enum SanityImageFit {
  CLIP
  CROP
  FILL
  FILLMAX
  MAX
  MIN
  SCALE
}

enum SanityProjectFieldsEnum {
  _createdAt
  _id
  _key
  _rawCoverImage
  _rawSlug
  _rawThumbnail
  _rev
  _type
  _updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  client
  coverImage____key
  coverImage____rawAsset
  coverImage____rawCrop
  coverImage____rawHotspot
  coverImage____type
  coverImage___asset____createdAt
  coverImage___asset____id
  coverImage___asset____key
  coverImage___asset____rawMetadata
  coverImage___asset____rawSource
  coverImage___asset____rev
  coverImage___asset____type
  coverImage___asset____updatedAt
  coverImage___asset___altText
  coverImage___asset___assetId
  coverImage___asset___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___description
  coverImage___asset___extension
  coverImage___asset___filename
  coverImage___asset___filesize
  coverImage___asset___gatsbyImage @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___height
  coverImage___asset___id
  coverImage___asset___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___label
  coverImage___asset___metadata____key
  coverImage___asset___metadata____rawDimensions
  coverImage___asset___metadata____rawLocation
  coverImage___asset___metadata____rawPalette
  coverImage___asset___metadata____type
  coverImage___asset___metadata___blurHash
  coverImage___asset___metadata___hasAlpha
  coverImage___asset___metadata___isOpaque
  coverImage___asset___metadata___lqip
  coverImage___asset___mimeType
  coverImage___asset___originalFilename
  coverImage___asset___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___path
  coverImage___asset___publicUrl
  coverImage___asset___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  coverImage___asset___sha1hash
  coverImage___asset___size
  coverImage___asset___source____key
  coverImage___asset___source____type
  coverImage___asset___source___id
  coverImage___asset___source___name
  coverImage___asset___source___url
  coverImage___asset___title
  coverImage___asset___uploadId
  coverImage___asset___url
  coverImage___asset___width
  coverImage___crop____key
  coverImage___crop____type
  coverImage___crop___bottom
  coverImage___crop___left
  coverImage___crop___right
  coverImage___crop___top
  coverImage___hotspot____key
  coverImage___hotspot____type
  coverImage___hotspot___height
  coverImage___hotspot___width
  coverImage___hotspot___x
  coverImage___hotspot___y
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isPagePublic
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  roles
  slug____key
  slug____type
  slug___current
  slug___source
  tagline
  thumbnail____key
  thumbnail____rawAsset
  thumbnail____rawCrop
  thumbnail____rawHotspot
  thumbnail____type
  thumbnail___asset____createdAt
  thumbnail___asset____id
  thumbnail___asset____key
  thumbnail___asset____rawMetadata
  thumbnail___asset____rawSource
  thumbnail___asset____rev
  thumbnail___asset____type
  thumbnail___asset____updatedAt
  thumbnail___asset___altText
  thumbnail___asset___assetId
  thumbnail___asset___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___description
  thumbnail___asset___extension
  thumbnail___asset___filename
  thumbnail___asset___filesize
  thumbnail___asset___gatsbyImage @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___height
  thumbnail___asset___id
  thumbnail___asset___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___label
  thumbnail___asset___metadata____key
  thumbnail___asset___metadata____rawDimensions
  thumbnail___asset___metadata____rawLocation
  thumbnail___asset___metadata____rawPalette
  thumbnail___asset___metadata____type
  thumbnail___asset___metadata___blurHash
  thumbnail___asset___metadata___hasAlpha
  thumbnail___asset___metadata___isOpaque
  thumbnail___asset___metadata___lqip
  thumbnail___asset___mimeType
  thumbnail___asset___originalFilename
  thumbnail___asset___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___path
  thumbnail___asset___publicUrl
  thumbnail___asset___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  thumbnail___asset___sha1hash
  thumbnail___asset___size
  thumbnail___asset___source____key
  thumbnail___asset___source____type
  thumbnail___asset___source___id
  thumbnail___asset___source___name
  thumbnail___asset___source___url
  thumbnail___asset___title
  thumbnail___asset___uploadId
  thumbnail___asset___url
  thumbnail___asset___width
  thumbnail___crop____key
  thumbnail___crop____type
  thumbnail___crop___bottom
  thumbnail___crop___left
  thumbnail___crop___right
  thumbnail___crop___top
  thumbnail___hotspot____key
  thumbnail___hotspot____type
  thumbnail___hotspot___height
  thumbnail___hotspot___width
  thumbnail___hotspot___x
  thumbnail___hotspot___y
  title
  type
  websiteUrl
  year
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  jsxRuntime
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___description
  siteMetadata___image
  siteMetadata___siteUrl
  siteMetadata___title
  siteMetadata___titleTemplate
}

enum SiteFunctionFieldsEnum {
  absoluteCompiledFilePath
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  functionRoute
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  originalAbsoluteFilePath
  originalRelativeFilePath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginName
  relativeCompiledFilePath
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  pageContext
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input AVIFOptions {
  lossless: Boolean
  quality: Int
  speed: Int
}

input BlurredOptions {
  "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
  toFormat: ImageFormat
  "Width of the generated low-res preview. Default is 20px"
  width: Int
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  childProjectsCsv: ProjectsCsvFilterInput
  children: NodeFilterListInput
  childrenImageSharp: ImageSharpFilterListInput
  childrenProjectsCsv: ProjectsCsvFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JPGOptions {
  progressive: Boolean = true
  quality: Int
}

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input PNGOptions {
  compressionSpeed: Int = 4
  quality: Int
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input ProjectsCsvFilterInput {
  children: NodeFilterListInput
  client: StringQueryOperatorInput
  cover: FileFilterInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  isPagePublic: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  parent: NodeFilterInput
  roles: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  tagline: StringQueryOperatorInput
  team: StringQueryOperatorInput
  thumbnail: FileFilterInput
  type: StringQueryOperatorInput
  websiteUrl: StringQueryOperatorInput
  year: DateQueryOperatorInput
}

input ProjectsCsvFilterListInput {
  elemMatch: ProjectsCsvFilterInput
}

input ProjectsCsvSortInput {
  fields: [ProjectsCsvFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input RemoteFileResizeFilterInput {
  height: IntQueryOperatorInput
  src: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input SanityAssetSourceDataFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input SanityFileAssetFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawSource: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  altText: StringQueryOperatorInput
  assetId: StringQueryOperatorInput
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  label: StringQueryOperatorInput
  mimeType: StringQueryOperatorInput
  originalFilename: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  sha1hash: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  source: SanityAssetSourceDataFilterInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input SanityFileAssetSortInput {
  fields: [SanityFileAssetFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityGeopointFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  alt: FloatQueryOperatorInput
  lat: FloatQueryOperatorInput
  lng: FloatQueryOperatorInput
}

input SanityImageAssetFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawMetadata: JSONQueryOperatorInput
  _rawSource: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  altText: StringQueryOperatorInput
  assetId: StringQueryOperatorInput
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  filename: StringQueryOperatorInput
  filesize: IntQueryOperatorInput
  gatsbyImage: JSONQueryOperatorInput
  gatsbyImageData: JSONQueryOperatorInput
  height: IntQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  label: StringQueryOperatorInput
  metadata: SanityImageMetadataFilterInput
  mimeType: StringQueryOperatorInput
  originalFilename: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  publicUrl: StringQueryOperatorInput
  resize: RemoteFileResizeFilterInput
  sha1hash: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  source: SanityAssetSourceDataFilterInput
  title: StringQueryOperatorInput
  uploadId: StringQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input SanityImageAssetSortInput {
  fields: [SanityImageAssetFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityImageCropFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  bottom: FloatQueryOperatorInput
  left: FloatQueryOperatorInput
  right: FloatQueryOperatorInput
  top: FloatQueryOperatorInput
}

input SanityImageDimensionsFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
}

input SanityImageFilterInput {
  _key: StringQueryOperatorInput
  _rawAsset: JSONQueryOperatorInput
  _rawCrop: JSONQueryOperatorInput
  _rawHotspot: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  asset: SanityImageAssetFilterInput
  crop: SanityImageCropFilterInput
  hotspot: SanityImageHotspotFilterInput
}

input SanityImageHotspotFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  x: FloatQueryOperatorInput
  y: FloatQueryOperatorInput
}

input SanityImageMetadataFilterInput {
  _key: StringQueryOperatorInput
  _rawDimensions: JSONQueryOperatorInput
  _rawLocation: JSONQueryOperatorInput
  _rawPalette: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  blurHash: StringQueryOperatorInput
  dimensions: SanityImageDimensionsFilterInput
  hasAlpha: BooleanQueryOperatorInput
  isOpaque: BooleanQueryOperatorInput
  location: SanityGeopointFilterInput
  lqip: StringQueryOperatorInput
  palette: SanityImagePaletteFilterInput
}

input SanityImagePaletteFilterInput {
  _key: StringQueryOperatorInput
  _rawDarkMuted: JSONQueryOperatorInput
  _rawDarkVibrant: JSONQueryOperatorInput
  _rawDominant: JSONQueryOperatorInput
  _rawLightMuted: JSONQueryOperatorInput
  _rawLightVibrant: JSONQueryOperatorInput
  _rawMuted: JSONQueryOperatorInput
  _rawVibrant: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  darkMuted: SanityImagePaletteSwatchFilterInput
  darkVibrant: SanityImagePaletteSwatchFilterInput
  dominant: SanityImagePaletteSwatchFilterInput
  lightMuted: SanityImagePaletteSwatchFilterInput
  lightVibrant: SanityImagePaletteSwatchFilterInput
  muted: SanityImagePaletteSwatchFilterInput
  vibrant: SanityImagePaletteSwatchFilterInput
}

input SanityImagePaletteSwatchFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  background: StringQueryOperatorInput
  foreground: StringQueryOperatorInput
  population: FloatQueryOperatorInput
  title: StringQueryOperatorInput
}

input SanityProjectFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawCoverImage: JSONQueryOperatorInput
  _rawSlug: JSONQueryOperatorInput
  _rawThumbnail: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  children: NodeFilterListInput
  client: StringQueryOperatorInput
  coverImage: SanityImageFilterInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  isPagePublic: BooleanQueryOperatorInput
  parent: NodeFilterInput
  roles: StringQueryOperatorInput
  slug: SanitySlugFilterInput
  tagline: StringQueryOperatorInput
  thumbnail: SanityImageFilterInput
  title: StringQueryOperatorInput
  type: StringQueryOperatorInput
  websiteUrl: StringQueryOperatorInput
  year: StringQueryOperatorInput
}

input SanityProjectSortInput {
  fields: [SanityProjectFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityResolveReferencesConfiguration {
  "Max depth to resolve references to"
  maxDepth: Int!
}

input SanitySlugFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  current: StringQueryOperatorInput
  source: StringQueryOperatorInput
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  jsxRuntime: StringQueryOperatorInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SiteFunctionFilterInput {
  absoluteCompiledFilePath: StringQueryOperatorInput
  children: NodeFilterListInput
  functionRoute: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  matchPath: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  parent: NodeFilterInput
  pluginName: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  pageContext: JSONQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: JSONQueryOperatorInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: JSONQueryOperatorInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  description: StringQueryOperatorInput
  image: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  title: StringQueryOperatorInput
  titleTemplate: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}

input TransformOptions {
  cropFocus: ImageCropFocus = ATTENTION
  duotone: DuotoneGradient
  fit: ImageFit = COVER
  grayscale: Boolean = false
  rotate: Int = 0
  trim: Float = 0.0
}

input WebPOptions {
  quality: Int
}
