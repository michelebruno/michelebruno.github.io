{"version":3,"file":"component---src-pages-projects-interconnected-js-3dcff3534ecf452d1a14.js","mappings":"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","sources":["webpack://michele-bruno/./src/components/Grid.js","webpack://michele-bruno/./src/components/Project/Cover.js","webpack://michele-bruno/./src/components/Project/Footer.js","webpack://michele-bruno/./src/components/Project/Heading.js","webpack://michele-bruno/./src/components/Project/Wrapper.js","webpack://michele-bruno/./src/pages/projects/interconnected.js"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport default function Grid({children, className, two, three, six, twelve, padding, projects}) {\n  return (\n    <div\n      className={classNames(\n        'grid',\n        two && 'grid-cols-2',\n        three && 'grid-cols-3',\n        six && 'grid-cols-6',\n        twelve && 'grid-cols-12',\n        projects && 'md:grid-cols-project',\n        padding && 'pb-lg px',\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n\nGrid.propTypes = {\n  two: PropTypes.bool,\n  three: PropTypes.bool,\n  six: PropTypes.bool,\n  twelve: PropTypes.bool,\n  padding: PropTypes.bool,\n};\n","import * as React from 'react';\nimport Image from '../Image';\n\nexport default function ({cover, thumbnail}) {\n  return (\n    <div className=\"h-screen overflow-hidden border-t border-b\">\n      <Image\n        image={typeof cover !== 'undefined' && cover?.childImageSharp ? cover : thumbnail}\n        className=\"h-full w-full object-cover scale-110 object-center\"\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\n\nexport default function Footer({children}) {\n  return <footer className=\" pb-lg px grid lg:grid-cols-4 w-full\">{children}</footer>;\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {AnimatedLink, H1} from '../Typography';\n\nexport default function Heading({name, year, tagline, roles, client, websiteUrl, links, children}) {\n  return (\n    <header className=\"grid grid-cols-1 lg:grid-cols-4 items-end px py-lg\">\n      <div className=\"col-span-3 pb lg:pb-0\">\n        <div>\n          <H1 className=\"lg:inline leading-none\">{name}</H1>\n          <span className=\"fs-xl\"> ({year})</span>\n        </div>\n        <h2 className=\"fs-xl text-gray\">{tagline}</h2>\n      </div>\n      <div className=\"pt-8 text-base flex flex-col\">\n        <ul>\n          {roles && (\n            <li>\n              <strong>Role:</strong> {roles.join(', ')}\n            </li>\n          )}\n          {client && (\n            <li>\n              <strong>Client:</strong> {client}\n            </li>\n          )}\n          {websiteUrl && (\n            <li>\n              <AnimatedLink href={websiteUrl} target=\"_blank\" className=\"font-bold\">\n                Visit the website ↗\n              </AnimatedLink>\n            </li>\n          )}\n          {links &&\n            links.map(([text, url]) => (\n              <li>\n                <AnimatedLink href={url} target=\"_blank\" className=\"font-bold\">\n                  {text} ↗\n                </AnimatedLink>\n              </li>\n            ))}\n          {children}\n        </ul>\n      </div>\n    </header>\n  );\n}\n\nHeading.propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({text: PropTypes.string.isRequired, url: PropTypes.string.isRequired})\n  ),\n};\n","import * as React from 'react';\nimport {ScrollTrigger} from 'gsap/ScrollTrigger';\nimport gsap from 'gsap';\nimport {graphql, Link, useStaticQuery} from 'gatsby';\nimport Layout from '../Layout';\nimport Typography, {AnimatedLink, H1, Tag, TextBox} from '../Typography';\nimport Marquee from '../Marquee';\nimport Arrow from '../Arrow';\nimport Grid from '../Grid';\nimport Image from '../Image';\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction Description({description, children}) {\n  return (\n    <TextBox title=\"Overview\">\n      <h3 className=\"fs-4xl mb-2 pb-8\">{description}</h3>\n      {children}\n    </TextBox>\n  );\n}\n\nexport default function Wrapper({project, children}) {\n  const {projects} = useStaticQuery(graphql`\n    query {\n      projects: allProjectsCsv(filter: {isPagePublic: {eq: true}}) {\n        nodes {\n          ...ProjectFragment\n        }\n      }\n    }\n  `);\n\n  const {name, slug, description} = project;\n\n  const nextProjectIndex = projects.nodes.findIndex(p => p.slug === slug) + 1;\n\n  const nextProject =\n    projects.nodes[projects.nodes.length > nextProjectIndex ? nextProjectIndex : 0];\n\n  return (\n    <Layout title={name} description={description}>\n      <div className=\"text-lg\">{children}</div>\n\n      <Link\n        to={`/projects/${nextProject.slug}`}\n        className=\"min-h-[80vh] justify-center border-y grid grid-cols-1 lg:grid-cols-3 items-end px py-lg relative group overflow-hidden !cursor-arrow\"\n      >\n        <Image\n          image={nextProject.cover || nextProject.thumbnail}\n          className=\"bg-white object-cover h-full w-full absolute inset-0 opacity-0 group-hover:opacity-30 transition-all group-hover:scale-105\"\n        />\n        <div className=\"col-span-2 col-start-1 pb lg:pb-0 relative mix-blend-multiply\">\n          <div>\n            <p className=\"fs-lg\">Next project</p>\n            <H1\n              tag={Link}\n              to={`/projects/${nextProject.slug}`}\n              className=\"lg:inline leading-none transition-all\"\n            >\n              {nextProject.name}\n            </H1>\n            <span className=\"fs-xl\"> ({nextProject.year})</span>\n          </div>\n          <h2 className=\"fs-xl text-gray \">{nextProject.tagline}</h2>\n        </div>\n        <div className=\"pt-8 text-base flex flex-col\" />\n      </Link>\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport {graphql} from 'gatsby';\n\nimport Wrapper from '../../components/Project/Wrapper';\nimport Heading from '../../components/Project/Heading';\nimport Cover from '../../components/Project/Cover';\nimport {Tag, TextBox} from '../../components/Typography';\nimport Image, {createGetImageFromName} from '../../components/Image';\nimport Footer from '../../components/Project/Footer';\nimport Grid from '../../components/Grid';\n\nexport default function SignHereToFightThePandemic({data: {project, images}}) {\n  const {name, roles, tagline, thumbnail, cover, year, client, websiteUrl, description} = project;\n\n  const getImage = createGetImageFromName(images.nodes, 'interconnected');\n\n  return (\n    <Wrapper project={project}>\n      <Heading\n        name={name}\n        tagline={tagline}\n        year={year}\n        client={client}\n        websiteUrl={websiteUrl}\n        roles={roles}\n      />\n      <Cover cover={cover} thumbnail={thumbnail} />\n      <TextBox title=\"Overview\" className=\"py-lg\" description={description} />\n      <Grid two padding>\n        <Image image={getImage('1.png')} />\n        <Image image={getImage('2.png')} />\n        <Image image={getImage('3.png')} />\n        <Image image={getImage('4.png')} />\n      </Grid>\n      <Footer>\n        <Tag title=\"Team\">\n          <ul>\n            <li>Federico Pozzi</li>\n          </ul>\n        </Tag>\n        <Tag title=\"Tools and technology\">\n          <ul>\n            <li>Figma</li>\n            <li>GatsbyJs</li>\n            <li>GSAP</li>\n          </ul>\n        </Tag>\n      </Footer>\n    </Wrapper>\n  );\n}\n\nexport const query = graphql`\n  {\n    project: projectsCsv(slug: {eq: \"interconnected\"}) {\n      ...ProjectFragment\n    }\n    images: allFile(filter: {relativeDirectory: {eq: \"interconnected\"}}) {\n      nodes {\n        publicURL\n        relativePath\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n    }\n  }\n`;\n"],"names":["Grid","children","className","two","three","six","twelve","padding","projects","classNames","cover","thumbnail","image","childImageSharp","Footer","Heading","name","year","tagline","roles","client","websiteUrl","links","H1","join","href","target","map","text","url","Wrapper","project","useStaticQuery","slug","description","nextProjectIndex","nodes","findIndex","p","nextProject","length","Layout","title","Link","to","Image","tag","gsap","ScrollTrigger","SignHereToFightThePandemic","data","images","getImage","createGetImageFromName"],"sourceRoot":""}